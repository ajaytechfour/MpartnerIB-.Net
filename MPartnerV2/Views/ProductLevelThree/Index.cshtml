@model Luminous.EF.ProductLevelThreef
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/assets/css/Formstyle.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<style type="text/css">
    .required
    {
        color: Red;
    }
    table
    {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }
    table table
    {
        font-size: 1em;
    }
    #footer-wrapper table
    {
        font-size: 1em;
    }
    table tr th
    {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }
    table tr th, table tr th a, table tr th a:hover
    {
        color: #FFF;
        font-weight: bold;
    }
    table tbody tr th
    {
        vertical-align: top;
    }
    tr td, tr th
    {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }
    #footer-wrapper tr td, #footer-wrapper tr th
    {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }
    tr.odd
    {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }
    tr, tr.even
    {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }
    table ul.links
    {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }
    table ul.links li
    {
        padding: 0 1em 0 0;
    }
</style>
<script type="text/javascript">
    $(function () {
        $.post("@Url.Content("~/ProductLevelOne/GetProductCategory")", null, function (data) { SetProdcutCategory(data, 'ProductCategory'); },
        "Json");

        $.post("@Url.Content("~/ProductLevelThree/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");

        //Set DropDown By Previous Values Begin
        if ('@ViewBag.ProductCat1' != '') {
            $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: '@ViewBag.ProductCat' }, function (data) { SetProdcutCategory(data, 'pclvlOne'); }, "Json");
        }
        if ('@ViewBag.ProductCat2' != '') {
            $.post("@Url.Content("~/ProductLevel3/GetProductLevelTwoCategory")", { procatid: '@ViewBag.ProductCat', procatone: '@ViewBag.ProductCat1' }, function (data) { SetProdcutCategory(data, 'pclvlTwo'); }, "Json");
        }
        //Set DropDown By Previous Values end
    });
    //Delete Record Begin

    function Delete(id) {
        if (confirm("Do You Want To Delete This Record")) {
            $.post("@Url.Content("~/ProductLevelThree/DeleteContact")", { id: id }, function (data) {
                $.post("@Url.Content("~/ProductLevelThree/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");
                alert(data);

            }, "Json");
        }
    }
    //Delete Record End

    //Edit Record Begin
    function Edit(id) {
        location.href = "@Url.Content("~/ProductLevelThree/Edit/")" + id;
    }

    function Detail(id) {
        location.href = "@Url.Content("~/ProductLevel3/FullProductDetails/")" + id;

    }
    //Edit Record End

    //Fill Grid View Table Begin

    function showFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").show();
    }
    function hideFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").hide();
    }
    function SetGrid(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            var body = "";
            $("#Grid tbody").empty();
            $.each(data, function (key, value) {


                body += "<tr><td> PLT" + value.id + "</td>" +
                "<td>" + value.Productid + "</td>" +
                "<td>" + value.ProductlevelOne + "</td>" +
            "<td>" + value.ProductlevelTwo + "</td>" +
            "<td>" + value.PName + "</td>" +
             "<td>" + value.status + "</td>" +

            "<td> <a style='cursor:pointer' onclick=Edit(" + value.id + ");>Edit</a> <a style='cursor:pointer' onclick=Delete(" + value.id + ");>Delete</a></td></tr>";
                debugger;
            });
            $("#Grid tbody").append(body);
            SetPages('@TempData["paging"]')
        }
    }

    //Fill Grid View Table End
    // SetProductCategory begin
    function SetProdcutCategory(data, id) {
        option = "";
        var procat = $("#" + id);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);
        if ('@ViewBag.ProductCat' != "") {

            $("#ProductCategory").val('@ViewBag.ProductCat');
        }
        if ('@ViewBag.ProductCat1' != "") {
            $("#pclvlOne").val('@ViewBag.ProductCat1');
        }
        if ('@ViewBag.ProductCat2' != "") {
            $("#pclvlTwo").val('@ViewBag.ProductCat2');
        }

    }
    // SetProduct Category end



    function SetProdcutlevelOne() {
        var procat = $("#ProductCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: procat }, function (data) { SetProdcutCategory(data, 'pclvlOne'); }, "Json");
    }

    function SetProdcutlevelTwo() {
        var procat = $("#ProductCategory :selected").val();
        var procat2 = $("#pclvlOne :selected").val();
        $.post("@Url.Content("~/ProductLevel3/GetProductLevelTwoCategory")", { procatid: procat, procatone: procat2 }, function (data) { SetProdcutCategory(data, 'pclvlTwo'); }, "Json");
    }
    function SetPages(paging) {
        var pages = "";
        $("#Paging").empty();
        $("#Paging").empty();

        for (var i = 1; i <= parseInt(paging); i++) {

            pages += "<a style='cursor:pointer' onclick=GetPagesValues(" + i + ");> " + i + "  </a>";


        }
        $("#Paging").append("<u>Pages:-</u>" + pages);
    }


    function GetPagesValues(id) {
        $.post("@Url.Content("~/ProductLevelThree/GetContactDetail")", { page: id }, function (data) { SetGrid(data); }, "Json");
    }
</script>
<div id="form" style="margin-bottom: 11px">
    @using (Html.BeginForm("SaveContact", "ProductLevelThree"))
    { 
          <div id="content_wrap">
            <div class="msgbar msg_Info heading">
              Product Level Three</div>
            <div class="content_main">
                <div class="boxes1">
            <table id="GridView">
                <tr>
                    <td style="width: 137px;">
                        Product Category <span class="required">*</span>
                    </td>
                    <td style="width: 221px">
                        <select name="pcId" onchange="SetProdcutlevelOne();" style="color: black" id="ProductCategory">
                            <option>Select</option>
                        </select>
                        <br />
                        @Html.ValidationMessageFor(model => model.PrductID, "", new { @class = "required" })
                        <span id="pcIdValidation"></span>
                    </td>
                    <td style="width: 124px;">
                        Product Level One<span class="required">*</span>
                    </td>
                    <td style="width: 221px">
                        <select name="ProductCat1" onchange="SetProdcutlevelTwo();" style="color: black"
                            id="pclvlOne">
                            <option>Select</option>
                        </select>
                        <br />
                        @Html.ValidationMessageFor(model => model.pc_Lvl_Id, "", new { @class = "required" })
                    </td>
                </tr>
                <tr>
                    <td style="width: 124px;">
                        Product Level Two<span class="required">*</span>
                    </td>
                    <td style="width: 221px">
                        <select name="ProductCat2" style="color: black" id="pclvlTwo">
                            <option>Select</option>
                        </select>
                        <br />
                        @Html.ValidationMessageFor(model => model.pc_Lv2_Id, "", new { @class = "required" })
                    </td>
                    <td>
                        Product Level Three <span class="required">*</span>
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.Name)
                        <br />
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "required" })
                    </td>
                </tr>
                <tr>
                    <td>
                        Status <span class="required">*</span>
                    </td>
                    <td colspan="3">
                        <input type="checkbox" checked="checked" name="statusC" />
                        @Html.ValidationMessageFor(model => model.PlTwStatus, "", new { @class = "required" })
                    </td>
                </tr>
            </table>
            <input type="submit" value="Submit" />
        </div>
        </div>
        </div>
       
    }
</div>
<div id="list" style="width: 997px; float: right; margin-right: 15px;">
    <table id="Grid" width="100%">
        <thead>
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Product Category
                </th>
                <th>
                    Product Level One
                </th>
                <th>
                  Product Level Two
                </th>
                <th>
                Product Level Three
                </th>
                <th>
                Status
                </th>
                <th>
                Action
                </th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<div id="Paging">
</div>
