@model Luminous.EF.UsersList
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/assets/css/Formstyle.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<style type="text/css">
    .required
    {
        color: Red;
    }
    table
    {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }
    table table
    {
        font-size: 1em;
    }
    #footer-wrapper table
    {
        font-size: 1em;
    }
    table tr th
    {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }
    table tr th, table tr th a, table tr th a:hover
    {
        color: #FFF;
        font-weight: bold;
    }
    table tbody tr th
    {
        vertical-align: top;
    }
    tr td, tr th
    {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }
    #footer-wrapper tr td, #footer-wrapper tr th
    {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }
    tr.odd
    {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }
    tr, tr.even
    {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }
    table ul.links
    {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }
    table ul.links li
    {
        padding: 0 1em 0 0;
    }
</style>
<script type="text/javascript">
    $(function () {
        //$.post("@Url.Content("~/Users/GetUsersDetail")", null, function (data) { SetGrid(data); }, "Json");
        show();
        $("#CustomerId").val('@Model.CustomerType');
        GetRole();
    });

    //State
    //Get All States
    function show() {
        $.get("@Url.Content("~/state/Showstate")", null, function (data) { chk(data, "StateId"); })
            .error(function (data) { chk(data, "StateId"); });
    }
    //Check Permisson and Session
    function chk(abc, Cid) {
        if (abc == "You do not have view permission") {

            alert("You Do Not Have View Permission");
            return false;
        }
        else {
            if (abc == "session expire") {
                location.href = '@Url.Action("login", "login")';
            }
          
            else {
                if (Cid == "StateId") {
                    SetDropDown(abc, Cid);
                }
                else if (Cid == "CityId") {
                    SetCityDropDown(abc, "CityId");
                }
                else if (Cid == "RoleID") {
                    SetRoleDropDown(abc, "RoleID");
                }
            }
        }
    }
    // Fill State DropDown
    function SetDropDown(data, cId) {
        option = "";

        var procat = $("#" + cId);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.statename + "</option>";

        });
        procat.append(option);
        $("#" + cId + " option:contains('@Model.Dis_State')").attr('selected', 'selected');
        showCity();
    }
    //State

    //Fill City DropDown
    function SetCityDropDown(data, cId) {
        option = "";

        var procat = $("#" + cId);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.cityname + ">" + value.cityname + "</option>";

        });
        procat.append(option);
        $("#" + cId + " option:contains('@Model.Dis_City')").attr('selected', 'selected');
    }
    //Fill City DropDown
    //City
    function showCity() {
        var statedValue = $("#StateId").val();
        debugger;
        $.get("@Url.Content("~/city/Showcity")", { id: statedValue }, function (data) { chk(data, "CityId"); })
            .error(function (data) { chk(data, "CityId"); });
    }
    //City

    //GetRole
    function GetRole() {
        var customerId = $("#CustomerId").val();
        $.get("@Url.Content("~/Users/GetRole")", { CutomerType: customerId }, function (data) { chk(data, "RoleID"); });
    }

    function SetRoleDropDown(data, cId) {
        option = "";

        var procat = $("#" + cId);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.name + "</option>";

        });
        procat.append(option);
        
        @{
            if (Model.RegId != null)
            {
        <text> procat.val(@Model.RegId); </text>
            }
            else
            {
        <text> procat.val(0); </text>
            }
        }
    }

    //GetRole
</script>
<div id="content_wrap">
    <div class="msgbar msg_Info heading">
        Update Dealer/Distributor Master</div>
    @using (Html.BeginForm("Update", "Users", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="content_main">
            <div class="boxes1">
                <table>
                    <tr>
                        <td>
                            Name <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.Dis_Name)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_Name, "", new { @class = "required" })
                        </td>
                        <td>
                            Email <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.Dis_Email)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_Email, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            State <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select id="StateId" name="stateName" onchange="showCity()">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_State, "", new { @class = "required" })
                        </td>
                        <td>
                            City <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select id="CityId" name="cityName">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_City, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            District <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.Dis_District)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_District, "", new { @class = "required" })
                        </td>
                        <td>
                            Contact No. <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.Dis_ContactNo)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_ContactNo, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Address 1 <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextAreaFor(a => a.Dis_Address1)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_Address1, "", new { @class = "required" })
                        </td>
                        <td>
                            Address 2 
                        </td>
                        <td>
                            @Html.TextAreaFor(a => a.Dis_Address2)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_Address2, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Profile Image <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.ProfileImage, new { @type = "File", })
                            <br />
                            @Html.ValidationMessageFor(a => a.ProfileImage, "", new { @class = "required" })
                        </td>
                        <td>
                            SAP Code <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.TextBoxFor(a => a.Dis_Sap_Code)
                            <br />
                            @Html.ValidationMessageFor(a => a.Dis_Sap_Code, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Customer Type <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select id="CustomerId" name="CustomerName" onchange="GetRole()">
                                <option value="0">Select</option>
                                <option value="DISTY">Destributor</option>
                                <option value="Dealer">Dealer</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.CustomerType, "", new { @class = "required" })
                        </td>
                        <td>
                            Select Role <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select id="RoleID" name="RoleName">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.RegId, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Is Active <span style="color: red;">*</span>
                        </td>
                        <td colspan="3">
                            @{
        if (Model.isActive == 1)
        { 
                                <input type="checkbox" name="IsAvtiveName" checked="checked" />
        }
        else
        { 
                                <input type="checkbox" name="IsAvtiveName" />
        }
                            }
                            <br />
                            @Html.HiddenFor(a => a.id)
                            @Html.ValidationMessageFor(a => a.isActive, "", new { @class = "required" })
                        </td>
                    </tr>
                </table>
                <input type="submit" value="Submit" />    <a href="@Url.Content("~/Users/Index")">Back</a>
            </div>
        </div>
    }
     
</div>
