@model Luminous.EF.PermotionsList
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/assets/css/Formstyle.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
<link href="@Url.Content("~/assets/css/chosen.css")" rel="stylesheet" type="text/css" />
<style type="text/css">
    .required {
        color: Red;
    }

    table {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }

        table table {
            font-size: 1em;
        }

    #footer-wrapper table {
        font-size: 1em;
    }

    table tr th {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }

        table tr th, table tr th a, table tr th a:hover {
            color: #FFF;
            font-weight: bold;
        }

    table tbody tr th {
        vertical-align: top;
    }

    tr td, tr th {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }

    #footer-wrapper tr td, #footer-wrapper tr th {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }

    tr.odd {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }

    tr, tr.even {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }

    table ul.links {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }

        table ul.links li {
            padding: 0 1em 0 0;
        }
</style>
<style>
    .FullDes {
        position: relative;
        background-color: #1D1D1D;
        width: 245px;
        color: white;
        border: 1px solid black;
        display: none;
    }
</style>
<script type="text/javascript">
    $(function () {
        $.post("@Url.Content("~/ProductCategory/GetParentCategory")", null, function (data) { SetParentCategory(data); }, "Json");
        $.post("@Url.Content("~/CreatePermotions/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");
        $.post("@Url.Content("~/Destributor/GetRegions")", null, function (data) { SetProdcutCategory(data, 'RegionList'); },
        "Json");
        $.post("@Url.Content("~/Dealers/GetAllDestributors")", null, function (data) { SetProdcutCategory(data, 'DestributorList'); }, "Json");
        $.post("@Url.Content("~/Dealers/GetAllDealer")", null, function (data) { SetProdcutCategory(data, 'DealerList'); }, "Json");
        $(".date").datepicker(
     { dateFormat: "dd-mm-yy" }
        );
        ValidationMessage();
    });

</script>
<script type="text/javascript">
    function ValidationMessage() {
        if ('@ViewBag.StartDate' != "") {
            $("#sdate").text('@ViewBag.StartDate');
        }

        if ('@ViewBag.EndDate' != "") {
            $("#edate").text('@ViewBag.EndDate');
        }

        if ('@ViewBag.File' != "") {
            $("#file").text('@ViewBag.File');
        }
        if ('@ViewBag.SaveStatus' != "") {
            alert('@ViewBag.SaveStatus');
            location.href = "@Url.Content("~/CreatePermotions/Index")";
        }
        $("#sdate").val('@ViewBag.preStartDate');
        $("#edate").val('@ViewBag.PreEndDate');

    }
</script>
<script type="text/javascript">
    $(function () {
        $.post("@Url.Content("~/CreatePermotions/GetProductCategory")", null, function (data) { SetProdcutCategoryLoad(data, 'Ptype'); },
     "Json");
        $.post("@Url.Content("~/ProductLevelOne/GetProductCategory")", null, function (data) { SetProdcutCategoryLoad(data, 'ProductCategory'); },
        "Json");

        //Set DropDown By Previous Values Begin
        if ('@ViewBag.ProductCat1' != '') {
            $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: '@ViewBag.ProductCat' }, function (data) { SetProdcutCategoryLoad(data, 'pclvlOne'); }, "Json");
        }

        //Set DropDown By Previous Values end
    });

    function SetGrid(data) {
        var body = "";
        $("#Grid tbody").empty();
        $.each(data, function (key, value) {
            var Description = value.Descriptions.toString();;
            var shorDescriptions = Description.substring(0, 10);
            body += "<tr><td> PLI" + value.id + "</td>" +
                 "<td>" + value.ParntCat + "</td>" +
                "<td>" + value.ProCatTwo + "</td>" +
                "<td>" + value.PCat + "</td>" +
            "<td>" + value.proCatOne + "</td>" +


            "<td><div style='Position:absolute;cursor:pointer'> <span class='Des' onmouseout='hideFullDescription(this);' onmouseover='showFullDescription(this);'>" + shorDescriptions + "</span><div style='position:relative;' class='FullDes'>" + Description + "</div></div></td>" +
             "<td>" + value.StartDate + "</td>" +
             "<td>" + value.EndDate + "</td>" +
             "<td>" + value.status + "</td>" +

            "<td> <a style='cursor:pointer' onclick=Detail(" + value.id + ");>Detail</a> <a style='cursor:pointer' onclick=Edit(" + value.id + ");>Edit</a> <a style='cursor:pointer' onclick=Delete(" + value.id + ");>Delete</a></td></tr>";
            debugger;
        });
        $("#Grid tbody").append(body);
        SetPages('@TempData["paging"]')

    }
    function Edit(id) {
        location.href = "@Url.Content("~/CreatePermotions/Edit/")" + id;
    }
    function showFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").show();
    }
    function hideFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").hide();
    }
    function SetProdcutCategory(data, id) {
        option = "";
        var procat = $("#" + id);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);



    }
    function SetParentCategory(data) {
        option = "";
        var procat = $("#ParentCategory");
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {

            option += "<option value=" + value.id + ">" + value.Name + "</option>";


        });
        procat.append(option);
        //ViewBag.Prntid = cud.ParentCatid;
        procat.val('@ViewBag.Prntid');


    }
    function SetProdcutCategoryLoad(data, id) {
        option = "";
        var procat = $("#" + id);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);

        if ('@ViewBag.ProductCat' != "") {

            $("#ProductCategory").val('@ViewBag.ProductCat');
        }
        if ('@ViewBag.ProductCat1' != "") {
            $("#pclvlOne").val('@ViewBag.ProductCat1');
        }
        if ('@ViewBag.Ptype' != "") {
            $("#Ptype").val('@ViewBag.Ptype');
        }

    }

    function SetProdcutlevelOne() {
        var procat = $("#ProductCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: procat }, function (data) { SetProdcutCategory(data, 'pclvlOne'); }, "Json");
    }
</script>
<script type="text/javascript">
    function Alls() {
        if ($("#All").is(":checked")) {
            $("#region").attr("disabled", true);
            $("#destributor").attr("disabled", true);
            $("#Dealer").attr("disabled", true);
            $("#RegionList_chosen").hide();
            $("#DestributorList_chosen").hide();
            $("#DealerList_chosen").hide();
        }
        else {
            $("#region").attr("disabled", false);
            $("#destributor").attr("disabled", false);
            $("#Dealer").attr("disabled", false);
            $("#RegionList_chosen").show();
            $("#DestributorList_chosen").show();
            $("#DealerList_chosen").show();
        }

    }


    function GetRegions() {
        if ($("#region").is(":checked")) {

            $.post("@Url.Content("~/Destributor/GetRegions")", null, function (data) { SetProdcutCategory(data, 'RegionList'); },
                 "Json");
            $("#RegionList_chosen").show();

        }
        else {
            $("#RegionList_chosen").hide();
        }

    }
    function GetDestributor() {
        if ($("#destributor").is(":checked")) {
            if ($("#region").is(":checked")) {
                SetDestributor();

            }
            else {
                $.post("@Url.Content("~/Dealers/GetAllDestributors")", null, function (data) { SetProdcutCategory(data, 'DestributorList'); }, "Json");
            }
            $("#DestributorList_chosen").show();
        }
        else {

            $("#DestributorList_chosen").hide();
        }
    }
    function GetDealer() {
        if ($("#Dealer").is(":checked")) {
            if ($("#destributor").is(":checked")) {
                SetDealer();
            }
            else {

                $.post("@Url.Content("~/Dealers/GetAllDealer")", null, function (data) { SetProdcutCategory(data, 'DealerList'); }, "Json");
            }
            $("#DealerList_chosen").show();
        }
        else {

            $("#DealerList_chosen").hide();
        }
    }
    function SetProdcutCategory(data, id) {
        option = "";
        var procat = $("#" + id);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);
        procat.chosen({ width: "100px" });
        procat.trigger("chosen:updated");
        if ($("#region").is(":checked")) {
            $("#RegionList_chosen").show();
        }
        else {
            $("#RegionList_chosen").hide();
        }

        if ($("#destributor").is(":checked")) {
            $("#DealerList_chosen").show();
        }
        else {
            $("#DestributorList_chosen").hide();
        }

        if ($("#Dealer").is(":checked")) {
            $("#DealerList_chosen").show();
        }
        else {
            $("#DealerList_chosen").hide();
        }
    }

    function SetRegion() {
        $("#RgList").val($("#RegionList").val());
        var regionlist = $("#RgList").val();

        $.post("@Url.Content("~/Dealers/GetDestributorsByMultiPleids")", { RegionId: regionlist }, function (data) { SetProdcutCategory(data, 'DestributorList'); }, "Json");
    }
    function SetDestributor() {
        $("#disList").val($("#DestributorList").val());

        var regionlist = $("#disList").val();

        $.post("@Url.Content("~/Dealers/GetAllDealerByMultiPleIds")", { RegionId: regionlist }, function (data) { SetProdcutCategory(data, 'DealerList'); }, "Json");
    }
    function SetDealer() {
        $("#Dealist").val($("#DealerList").val());
    }
</script>
<div id="form" style="margin-bottom: 11px">
    @using (Html.BeginForm("Update", "CreatePermotions", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div id="content_wrap">
            <div class="msgbar msg_Info heading">
                Edit Promotions
            </div>
            <div class="content_main">
                <div class="boxes1">
                    <table id="GridView">
                        <tr>
                            <td style="width: 137px;">
                                Parent Category<span class="required">*</span>
                            </td>
                            <td style="width: 221px">
                                <select name="ParentCatid" style="color: black" id="ParentCategory">
                                    <option>Select</option>
                                </select>

                                <br />
                                @Html.ValidationMessageFor(model => model.ParentCatid, "", new { @class = "required" })

                            </td>
                            <td style="width: 137px;">
                                Promotion Type<span class="required">*</span>
                            </td>
                            <td style="width: 221px">
                                <select name="Ptype" style="color: black" id="Ptype">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.HiddenFor(a => a.id)
                                @Html.ValidationMessageFor(a => a.PermotionTypeId, "", new { @class = "required" })
                            </td>

                        </tr>
                        <tr>
                            <td style="width: 138px;">
                                Product Category <span class="required">*</span>
                            </td>
                            <td>
                                <select name="Pcat" onchange="SetProdcutlevelOne();" style="color: black" id="ProductCategory">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(a => a.ProductCatId, "", new { @class = "required" })
                            </td>
                            <td>
                                Product Level One<span class="required">*</span>
                            </td>
                            <td>
                                <select name="PlvlOne" style="color: black" id="pclvlOne">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(a => a.ProductLvlOneId, "", new { @class = "required" })
                            </td>

                        </tr>
                        <tr>
                            <td>
                                Upload Images<span class="required">*</span>
                            </td>
                            <td>
                                <input type="file" name="file" />
                                <br />
                                @Html.ValidationMessageFor(a => a.ImageName, "", new { @class = "required" })
                            </td>
                            <td>
                                Description<span class="required">*</span>
                            </td>
                            <td colspan="3">
                                @Html.TextAreaFor(a => a.Descriptions, 5, 50, new { })
                                <br />
                                @Html.ValidationMessageFor(a => a.Descriptions, "", new { @class = "required" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Start Date<span class="required">*</span>
                            </td>
                            <td>
                                <input id="sdate" type="text" class="date" name="StartDate" />
                                <br />
                                @Html.ValidationMessageFor(a => a.StartDate, "", new { @class = "required" })
                            </td>
                            <td>
                                End Date<span class="required">*</span>
                            </td>
                            <td>
                                <input id="edate" type="text" class="date" name="EndDate" />
                                <br />
                                @Html.ValidationMessageFor(a => a.Enddate, "", new { @class = "required" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Permission For
                            </td>
                            <td>
                                @{
        int id = Model.id;
        <a href="/EditPromotionPermission/Index/@id">Edit Permission</a>
                                }
                            </td>

                            <td>
                                Status
                            </td>
                            <td>
                                <input type="checkbox" checked="checked" name="statusC" />
                            </td>
                        </tr>
                    </table>
                    <input type="submit" value="Submit" />
                </div>
            </div>
        </div>

    }
</div>
