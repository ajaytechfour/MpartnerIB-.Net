//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Luminous.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LuminousEntities : DbContext
    {
        public LuminousEntities()
            : base("name=LuminousEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<contactUsDetail> contactUsDetails { get; set; }
        public DbSet<contactUsDetail_History> contactUsDetail_History { get; set; }
        public DbSet<PermotionType> PermotionTypes { get; set; }
        public DbSet<ProductImage> ProductImages { get; set; }
        public DbSet<ProductLevelOne> ProductLevelOnes { get; set; }
        public DbSet<ProductLevelTwo> ProductLevelTwoes { get; set; }
        public DbSet<ProductPermotion> ProductPermotions { get; set; }
        public DbSet<ProductLevelOneHistory> ProductLevelOneHistories { get; set; }
        public DbSet<ProductLevelTwoHistory> ProductLevelTwoHistories { get; set; }
        public DbSet<ProductImagesHistory> ProductImagesHistories { get; set; }
        public DbSet<ProductLevelThreef> ProductLevelThreefs { get; set; }
        public DbSet<ProductLevelThreefHistory> ProductLevelThreefHistories { get; set; }
        public DbSet<Region> Regions { get; set; }
        public DbSet<RegionsHistroy> RegionsHistroys { get; set; }
        public DbSet<DestributorList> DestributorLists { get; set; }
        public DbSet<DestributorsHistory> DestributorsHistories { get; set; }
        public DbSet<Dealer> Dealers { get; set; }
        public DbSet<DealersHistory> DealersHistories { get; set; }
        public DbSet<PermotionTypeHistory> PermotionTypeHistories { get; set; }
        public DbSet<AllProductDetail> AllProductDetails { get; set; }
        public DbSet<functionalgroup> functionalgroups { get; set; }
        public DbSet<AllGroup> AllGroups { get; set; }
        public DbSet<FUNCTION> FUNCTIONS { get; set; }
        public DbSet<FUNCTIONSHistory> FUNCTIONSHistories { get; set; }
        public DbSet<allpage> allpages { get; set; }
        public DbSet<allpagehistory> allpagehistories { get; set; }
        public DbSet<allprofile_history> allprofile_history { get; set; }
        public DbSet<pageallow> pageallows { get; set; }
        public DbSet<useraccount> useraccounts { get; set; }
        public DbSet<useraccounthistory> useraccounthistories { get; set; }
        public DbSet<allstate> allstates { get; set; }
        public DbSet<allstate_history> allstate_history { get; set; }
        public DbSet<city> cities { get; set; }
        public DbSet<city_history> city_history { get; set; }
        public DbSet<UsersListHistory> UsersListHistories { get; set; }
        public DbSet<Suggestion> Suggestions { get; set; }
        public DbSet<AllProductDetailsVersion2> AllProductDetailsVersion2 { get; set; }
        public DbSet<InsertContextHistory> InsertContextHistories { get; set; }
        public DbSet<CustomerPermission> CustomerPermissions { get; set; }
        public DbSet<CustomerType> CustomerTypes { get; set; }
        public DbSet<FooterCategory> FooterCategories { get; set; }
        public DbSet<FooterCategoryHistory> FooterCategoryHistories { get; set; }
        public DbSet<NotificationReadStatu> NotificationReadStatus { get; set; }
        public DbSet<SchemeData> SchemeDatas { get; set; }
        public DbSet<SchemeDataHistory> SchemeDataHistories { get; set; }
        public DbSet<SchemeSlab> SchemeSlabs { get; set; }
        public DbSet<SchemeSlabHistory> SchemeSlabHistories { get; set; }
        public DbSet<ParentCategory> ParentCategories { get; set; }
        public DbSet<ParentCategoryhistory> ParentCategoryhistories { get; set; }
        public DbSet<PermotionsList> PermotionsLists { get; set; }
        public DbSet<PermotionsListHistory> PermotionsListHistories { get; set; }
        public DbSet<NotificationSurveyHistory> NotificationSurveyHistories { get; set; }
        public DbSet<ProductthreeImageMapping> ProductthreeImageMappings { get; set; }
        public DbSet<AlertNotificationReadStatu> AlertNotificationReadStatus { get; set; }
        public DbSet<AlertNotification> AlertNotifications { get; set; }
        public DbSet<AlertNotifications_History> AlertNotifications_History { get; set; }
        public DbSet<ProductLevelThree> ProductLevelThrees { get; set; }
        public DbSet<ProductLevelThreeHistory> ProductLevelThreeHistories { get; set; }
        public DbSet<Redirectdata> Redirectdatas { get; set; }
        public DbSet<luminious_UpdateHistory> luminious_UpdateHistory { get; set; }
        public DbSet<ProductAccessTable> ProductAccessTables { get; set; }
        public DbSet<ProductAccessTableForProduct> ProductAccessTableForProducts { get; set; }
        public DbSet<NotificationAccessTable> NotificationAccessTables { get; set; }
        public DbSet<AlertNotificationAccessTable> AlertNotificationAccessTables { get; set; }
        public DbSet<Gallery> Galleries { get; set; }
        public DbSet<Gallery_History> Gallery_History { get; set; }
        public DbSet<Notification> Notifications { get; set; }
        public DbSet<NotificationsHistory> NotificationsHistories { get; set; }
        public DbSet<luminious_Update> luminious_Update { get; set; }
        public DbSet<Banner> Banners { get; set; }
        public DbSet<BannerHistory> BannerHistories { get; set; }
        public DbSet<MHrOtp> MHrOtps { get; set; }
        public DbSet<NewDealerData> NewDealerDatas { get; set; }
        public DbSet<InsertContext> InsertContexts { get; set; }
        public DbSet<MappingUrl_Page> MappingUrl_Page { get; set; }
        public DbSet<Callingsample> Callingsamples { get; set; }
        public DbSet<MPartnerServiceLog> MPartnerServiceLogs { get; set; }
        public DbSet<MapConnectAssist_Comments> MapConnectAssist_Comments { get; set; }
        public DbSet<GCM_NotificationLog> GCM_NotificationLog { get; set; }
        public DbSet<WC_Connect_Update_customer_detail_log> WC_Connect_Update_customer_detail_log { get; set; }
        public DbSet<Wc_Warranty_Collection_Data> Wc_Warranty_Collection_Data { get; set; }
        public DbSet<Wc_Warranty_Collection_Data_History> Wc_Warranty_Collection_Data_History { get; set; }
        public DbSet<UpdateNotificationDeviceid> UpdateNotificationDeviceids { get; set; }
        public DbSet<Auditlog_Userverificationstatus> Auditlog_Userverificationstatus { get; set; }
        public DbSet<ContestPicture_Tab> ContestPicture_Tab { get; set; }
        public DbSet<ContestMaster> ContestMasters { get; set; }
        public DbSet<NotificationSurvey> NotificationSurveys { get; set; }
        public DbSet<ShowMarquee_Text_History> ShowMarquee_Text_History { get; set; }
        public DbSet<ShowMarquee_Text> ShowMarquee_Text { get; set; }
        public DbSet<SaveNotificationSurvey> SaveNotificationSurveys { get; set; }
        public DbSet<SaveDelContestImage> SaveDelContestImages { get; set; }
        public DbSet<allprofile> allprofiles { get; set; }
        public DbSet<Lsd_GiftMaster> Lsd_GiftMaster { get; set; }
        public DbSet<Lsd_GiftMaster_History> Lsd_GiftMaster_History { get; set; }
        public DbSet<LSD_TNCMaster> LSD_TNCMaster { get; set; }
        public DbSet<LSD_TNCMaster_History> LSD_TNCMaster_History { get; set; }
        public DbSet<AppVersion> AppVersions { get; set; }
        public DbSet<Lsd_DistCouponCount_History> Lsd_DistCouponCount_History { get; set; }
        public DbSet<LSD_Master_History> LSD_Master_History { get; set; }
        public DbSet<Card_ColourMaster> Card_ColourMaster { get; set; }
        public DbSet<Card_ActionMaster> Card_ActionMaster { get; set; }
        public DbSet<WRS_Datecheck> WRS_Datecheck { get; set; }
        public DbSet<UserRegistration> UserRegistrations { get; set; }
        public DbSet<UsersList> UsersLists { get; set; }
        public DbSet<ProductCatergory> ProductCatergories { get; set; }
        public DbSet<ProductCatergoryHistory> ProductCatergoryHistories { get; set; }
        public DbSet<FAQ> FAQs { get; set; }
        public DbSet<FAQ_History> FAQ_History { get; set; }
        public DbSet<MediaData> MediaDatas { get; set; }
        public DbSet<MediaDataHistory> MediaDataHistories { get; set; }
        public DbSet<EscalationMatrix> EscalationMatrices { get; set; }
        public DbSet<EscalationMatrix_History> EscalationMatrix_History { get; set; }
        public DbSet<LanguageMaster> LanguageMasters { get; set; }
        public DbSet<CustomerModule> CustomerModules { get; set; }
        public DbSet<UserVerification> UserVerifications { get; set; }
        public DbSet<ConnectAssist_log> ConnectAssist_log { get; set; }
        public DbSet<ConnectAssist> ConnectAssists { get; set; }
        public DbSet<Lsd_DistCouponCount> Lsd_DistCouponCount { get; set; }
        public DbSet<LSD_Master> LSD_Master { get; set; }
        public DbSet<LSD_DealerCouponCount> LSD_DealerCouponCount { get; set; }
        public DbSet<Card_dynamicPage> Card_dynamicPage { get; set; }
        public DbSet<Price_SchemeAccessTable> Price_SchemeAccessTable { get; set; }
        public DbSet<Card_dynamicPage_History> Card_dynamicPage_History { get; set; }
        public DbSet<Card_ProviderMaster> Card_ProviderMaster { get; set; }
        public DbSet<State> States { get; set; }
        public DbSet<MostSearchItem> MostSearchItems { get; set; }
        public DbSet<Card_CardData> Card_CardData { get; set; }
    
        public virtual ObjectResult<GetProduct_Result> GetProduct(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProduct_Result>("GetProduct", useridParameter);
        }
    
        public virtual ObjectResult<GetNotification_Result> GetNotification(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotification_Result>("GetNotification", useridParameter);
        }
    
        public virtual ObjectResult<GetProductlevelFourName_Result> GetProductlevelFourName(string productlevelFourName)
        {
            var productlevelFourNameParameter = productlevelFourName != null ?
                new ObjectParameter("ProductlevelFourName", productlevelFourName) :
                new ObjectParameter("ProductlevelFourName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductlevelFourName_Result>("GetProductlevelFourName", productlevelFourNameParameter);
        }
    
        public virtual ObjectResult<GetNotificationAccessTable_Result> GetNotificationAccessTable(Nullable<int> nid)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("Nid", nid) :
                new ObjectParameter("Nid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotificationAccessTable_Result>("GetNotificationAccessTable", nidParameter);
        }
    
        public virtual ObjectResult<GetProductLevelFourAccessTable_Result> GetProductLevelFourAccessTable(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductLevelFourAccessTable_Result>("GetProductLevelFourAccessTable", pidParameter);
        }
    
        public virtual ObjectResult<GetProductVersion2_Result> GetProductVersion2(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductVersion2_Result>("GetProductVersion2", useridParameter);
        }
    
        public virtual ObjectResult<GetPromotionAccessTable_Result> GetPromotionAccessTable(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPromotionAccessTable_Result>("GetPromotionAccessTable", pidParameter);
        }
    
        public virtual int UpdateInsertContextRating(Nullable<int> contestId, string rating, string imageEncode, string dealerName, string dealerCity, string dealerPhone, string dealerEmail, string distributorCode, string empCode, string dealerId, string createdBy, string ratingBy)
        {
            var contestIdParameter = contestId.HasValue ?
                new ObjectParameter("ContestId", contestId) :
                new ObjectParameter("ContestId", typeof(int));
    
            var ratingParameter = rating != null ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(string));
    
            var imageEncodeParameter = imageEncode != null ?
                new ObjectParameter("ImageEncode", imageEncode) :
                new ObjectParameter("ImageEncode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var dealerCityParameter = dealerCity != null ?
                new ObjectParameter("DealerCity", dealerCity) :
                new ObjectParameter("DealerCity", typeof(string));
    
            var dealerPhoneParameter = dealerPhone != null ?
                new ObjectParameter("DealerPhone", dealerPhone) :
                new ObjectParameter("DealerPhone", typeof(string));
    
            var dealerEmailParameter = dealerEmail != null ?
                new ObjectParameter("DealerEmail", dealerEmail) :
                new ObjectParameter("DealerEmail", typeof(string));
    
            var distributorCodeParameter = distributorCode != null ?
                new ObjectParameter("DistributorCode", distributorCode) :
                new ObjectParameter("DistributorCode", typeof(string));
    
            var empCodeParameter = empCode != null ?
                new ObjectParameter("EmpCode", empCode) :
                new ObjectParameter("EmpCode", typeof(string));
    
            var dealerIdParameter = dealerId != null ?
                new ObjectParameter("DealerId", dealerId) :
                new ObjectParameter("DealerId", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var ratingByParameter = ratingBy != null ?
                new ObjectParameter("RatingBy", ratingBy) :
                new ObjectParameter("RatingBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInsertContextRating", contestIdParameter, ratingParameter, imageEncodeParameter, dealerNameParameter, dealerCityParameter, dealerPhoneParameter, dealerEmailParameter, distributorCodeParameter, empCodeParameter, dealerIdParameter, createdByParameter, ratingByParameter);
        }
    
        public virtual ObjectResult<GetPermotionsByUserId_Result> GetPermotionsByUserId(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermotionsByUserId_Result>("GetPermotionsByUserId", useridParameter);
        }
    
        public virtual ObjectResult<PermotonsListPaging_Result> PermotonsListPaging(Nullable<int> pageId, Nullable<int> totalPage)
        {
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var totalPageParameter = totalPage.HasValue ?
                new ObjectParameter("TotalPage", totalPage) :
                new ObjectParameter("TotalPage", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermotonsListPaging_Result>("PermotonsListPaging", pageIdParameter, totalPageParameter);
        }
    
        public virtual ObjectResult<GetAlertNotificationAccessTable_Result> GetAlertNotificationAccessTable(Nullable<int> nid)
        {
            var nidParameter = nid.HasValue ?
                new ObjectParameter("Nid", nid) :
                new ObjectParameter("Nid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlertNotificationAccessTable_Result>("GetAlertNotificationAccessTable", nidParameter);
        }
    
        public virtual ObjectResult<GetAlertNotificationByUserId_Result> GetAlertNotificationByUserId(string userid)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAlertNotificationByUserId_Result>("GetAlertNotificationByUserId", useridParameter);
        }
    
        public virtual ObjectResult<MHrVarifyOtpNotification_Result> MHrVarifyOtpNotification(string empid, string phoneno, string otp)
        {
            var empidParameter = empid != null ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            var otpParameter = otp != null ?
                new ObjectParameter("otp", otp) :
                new ObjectParameter("otp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MHrVarifyOtpNotification_Result>("MHrVarifyOtpNotification", empidParameter, phonenoParameter, otpParameter);
        }
    
        public virtual ObjectResult<Sp_MHrCreateOtp_Result> Sp_MHrCreateOtp(string empid, string phoneno)
        {
            var empidParameter = empid != null ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(string));
    
            var phonenoParameter = phoneno != null ?
                new ObjectParameter("phoneno", phoneno) :
                new ObjectParameter("phoneno", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_MHrCreateOtp_Result>("Sp_MHrCreateOtp", empidParameter, phonenoParameter);
        }
    
        public virtual int WC_Connect_Update_customer_detail(string product_serial_no, string product_Type, string customer_Name, string customer_Phone, string customer_Address, Nullable<System.DateTime> product_Purchase_Date, string verify_status, string verify_Remark, string verify_By)
        {
            var product_serial_noParameter = product_serial_no != null ?
                new ObjectParameter("product_serial_no", product_serial_no) :
                new ObjectParameter("product_serial_no", typeof(string));
    
            var product_TypeParameter = product_Type != null ?
                new ObjectParameter("Product_Type", product_Type) :
                new ObjectParameter("Product_Type", typeof(string));
    
            var customer_NameParameter = customer_Name != null ?
                new ObjectParameter("Customer_Name", customer_Name) :
                new ObjectParameter("Customer_Name", typeof(string));
    
            var customer_PhoneParameter = customer_Phone != null ?
                new ObjectParameter("Customer_Phone", customer_Phone) :
                new ObjectParameter("Customer_Phone", typeof(string));
    
            var customer_AddressParameter = customer_Address != null ?
                new ObjectParameter("Customer_Address", customer_Address) :
                new ObjectParameter("Customer_Address", typeof(string));
    
            var product_Purchase_DateParameter = product_Purchase_Date.HasValue ?
                new ObjectParameter("Product_Purchase_Date", product_Purchase_Date) :
                new ObjectParameter("Product_Purchase_Date", typeof(System.DateTime));
    
            var verify_statusParameter = verify_status != null ?
                new ObjectParameter("Verify_status", verify_status) :
                new ObjectParameter("Verify_status", typeof(string));
    
            var verify_RemarkParameter = verify_Remark != null ?
                new ObjectParameter("Verify_Remark", verify_Remark) :
                new ObjectParameter("Verify_Remark", typeof(string));
    
            var verify_ByParameter = verify_By != null ?
                new ObjectParameter("Verify_By", verify_By) :
                new ObjectParameter("Verify_By", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WC_Connect_Update_customer_detail", product_serial_noParameter, product_TypeParameter, customer_NameParameter, customer_PhoneParameter, customer_AddressParameter, product_Purchase_DateParameter, verify_statusParameter, verify_RemarkParameter, verify_ByParameter);
        }
    
        public virtual int UpdateInsertContextRating_Contest(Nullable<int> contestId, string rating, string dealerCode, string dealerName, string distributorCode, string createdBy, string ratingBy, Nullable<int> marqueeid)
        {
            var contestIdParameter = contestId.HasValue ?
                new ObjectParameter("ContestId", contestId) :
                new ObjectParameter("ContestId", typeof(int));
    
            var ratingParameter = rating != null ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(string));
    
            var dealerCodeParameter = dealerCode != null ?
                new ObjectParameter("DealerCode", dealerCode) :
                new ObjectParameter("DealerCode", typeof(string));
    
            var dealerNameParameter = dealerName != null ?
                new ObjectParameter("DealerName", dealerName) :
                new ObjectParameter("DealerName", typeof(string));
    
            var distributorCodeParameter = distributorCode != null ?
                new ObjectParameter("DistributorCode", distributorCode) :
                new ObjectParameter("DistributorCode", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var ratingByParameter = ratingBy != null ?
                new ObjectParameter("RatingBy", ratingBy) :
                new ObjectParameter("RatingBy", typeof(string));
    
            var marqueeidParameter = marqueeid.HasValue ?
                new ObjectParameter("Marqueeid", marqueeid) :
                new ObjectParameter("Marqueeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInsertContextRating_Contest", contestIdParameter, ratingParameter, dealerCodeParameter, dealerNameParameter, distributorCodeParameter, createdByParameter, ratingByParameter, marqueeidParameter);
        }
    
        public virtual int UpdateActivationDistCode(string userid, string activationDistName, string activatedQrCode, string qrCode)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var activationDistNameParameter = activationDistName != null ?
                new ObjectParameter("ActivationDistName", activationDistName) :
                new ObjectParameter("ActivationDistName", typeof(string));
    
            var activatedQrCodeParameter = activatedQrCode != null ?
                new ObjectParameter("ActivatedQrCode", activatedQrCode) :
                new ObjectParameter("ActivatedQrCode", typeof(string));
    
            var qrCodeParameter = qrCode != null ?
                new ObjectParameter("QrCode", qrCode) :
                new ObjectParameter("QrCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateActivationDistCode", useridParameter, activationDistNameParameter, activatedQrCodeParameter, qrCodeParameter);
        }
    
        public virtual int UpdateRedemptionDealerCode(string userid, string redemptionDealerName, string redemtionDealerBarCode, string redemptionDealerSecretCode, string activationDistCode)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var redemptionDealerNameParameter = redemptionDealerName != null ?
                new ObjectParameter("RedemptionDealerName", redemptionDealerName) :
                new ObjectParameter("RedemptionDealerName", typeof(string));
    
            var redemtionDealerBarCodeParameter = redemtionDealerBarCode != null ?
                new ObjectParameter("RedemtionDealerBarCode", redemtionDealerBarCode) :
                new ObjectParameter("RedemtionDealerBarCode", typeof(string));
    
            var redemptionDealerSecretCodeParameter = redemptionDealerSecretCode != null ?
                new ObjectParameter("RedemptionDealerSecretCode", redemptionDealerSecretCode) :
                new ObjectParameter("RedemptionDealerSecretCode", typeof(string));
    
            var activationDistCodeParameter = activationDistCode != null ?
                new ObjectParameter("ActivationDistCode", activationDistCode) :
                new ObjectParameter("ActivationDistCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRedemptionDealerCode", useridParameter, redemptionDealerNameParameter, redemtionDealerBarCodeParameter, redemptionDealerSecretCodeParameter, activationDistCodeParameter);
        }
    
        public virtual int LSD_UpdateClaimDistCode(string claimDistCode)
        {
            var claimDistCodeParameter = claimDistCode != null ?
                new ObjectParameter("ClaimDistCode", claimDistCode) :
                new ObjectParameter("ClaimDistCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LSD_UpdateClaimDistCode", claimDistCodeParameter);
        }
    
        public virtual ObjectResult<getCustomerPermission_Result> getCustomerPermission(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerPermission_Result>("getCustomerPermission", userIdParameter);
        }
    
        public virtual ObjectResult<getCustomerPermission_New_Result> getCustomerPermission_New(string userId, string languagecode)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            var languagecodeParameter = languagecode != null ?
                new ObjectParameter("Languagecode", languagecode) :
                new ObjectParameter("Languagecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCustomerPermission_New_Result>("getCustomerPermission_New", userIdParameter, languagecodeParameter);
        }
    
        public virtual ObjectResult<getCatalog_Upper_Result> getCatalog_Upper(Nullable<int> prodcatid)
        {
            var prodcatidParameter = prodcatid.HasValue ?
                new ObjectParameter("prodcatid", prodcatid) :
                new ObjectParameter("prodcatid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCatalog_Upper_Result>("getCatalog_Upper", prodcatidParameter);
        }
    
        public virtual ObjectResult<GetPrice_SchemeByUserId_Result> GetPrice_SchemeByUserId(string userid, string pagename)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var pagenameParameter = pagename != null ?
                new ObjectParameter("Pagename", pagename) :
                new ObjectParameter("Pagename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPrice_SchemeByUserId_Result>("GetPrice_SchemeByUserId", useridParameter, pagenameParameter);
        }
    
        public virtual ObjectResult<GetPromotionAccessTable_Price_Scheme_Result> GetPromotionAccessTable_Price_Scheme(Nullable<int> pid)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("Pid", pid) :
                new ObjectParameter("Pid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPromotionAccessTable_Price_Scheme_Result>("GetPromotionAccessTable_Price_Scheme", pidParameter);
        }
    
        public virtual ObjectResult<userIdForPushNotification_Result> userIdForPushNotification(Nullable<int> notificationId)
        {
            var notificationIdParameter = notificationId.HasValue ?
                new ObjectParameter("NotificationId", notificationId) :
                new ObjectParameter("NotificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<userIdForPushNotification_Result>("userIdForPushNotification", notificationIdParameter);
        }
    
        public virtual ObjectResult<HomePage_Paging_Result> HomePage_Paging(Nullable<int> pageId, Nullable<int> totalPage, string pagename)
        {
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var totalPageParameter = totalPage.HasValue ?
                new ObjectParameter("TotalPage", totalPage) :
                new ObjectParameter("TotalPage", typeof(int));
    
            var pagenameParameter = pagename != null ?
                new ObjectParameter("pagename", pagename) :
                new ObjectParameter("pagename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HomePage_Paging_Result>("HomePage_Paging", pageIdParameter, totalPageParameter, pagenameParameter);
        }
    
        public virtual int update_Userverification(string userid, string osversion, string ostype, string appversion, string deviceid, string fcm_token)
        {
            var useridParameter = userid != null ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(string));
    
            var osversionParameter = osversion != null ?
                new ObjectParameter("osversion", osversion) :
                new ObjectParameter("osversion", typeof(string));
    
            var ostypeParameter = ostype != null ?
                new ObjectParameter("ostype", ostype) :
                new ObjectParameter("ostype", typeof(string));
    
            var appversionParameter = appversion != null ?
                new ObjectParameter("appversion", appversion) :
                new ObjectParameter("appversion", typeof(string));
    
            var deviceidParameter = deviceid != null ?
                new ObjectParameter("deviceid", deviceid) :
                new ObjectParameter("deviceid", typeof(string));
    
            var fcm_tokenParameter = fcm_token != null ?
                new ObjectParameter("fcm_token", fcm_token) :
                new ObjectParameter("fcm_token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Userverification", useridParameter, osversionParameter, ostypeParameter, appversionParameter, deviceidParameter, fcm_tokenParameter);
        }
    
        public virtual ObjectResult<PermotonsListPagingScheme_Price_New_Result> PermotonsListPagingScheme_Price_New(string pagename)
        {
            var pagenameParameter = pagename != null ?
                new ObjectParameter("pagename", pagename) :
                new ObjectParameter("pagename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PermotonsListPagingScheme_Price_New_Result>("PermotonsListPagingScheme_Price_New", pagenameParameter);
        }
    
        public virtual ObjectResult<ProductLevelThreePaging_Result> ProductLevelThreePaging()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductLevelThreePaging_Result>("ProductLevelThreePaging");
        }
    
        public virtual ObjectResult<getActiveData_Result> getActiveData(Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getActiveData_Result>("getActiveData", fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<spMostSearchItem_Result> spMostSearchItem(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spMostSearchItem_Result>("spMostSearchItem", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<spGetVisitReport_Result> spGetVisitReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> endDate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetVisitReport_Result>("spGetVisitReport", startdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<ActiveUserReport_Result> ActiveUserReport(Nullable<System.DateTime> startdate, Nullable<System.DateTime> endDate)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("Startdate", startdate) :
                new ObjectParameter("Startdate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ActiveUserReport_Result>("ActiveUserReport", startdateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSurveyRecord_Result> GetSurveyRecord(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSurveyRecord_Result>("GetSurveyRecord", idParameter);
        }
    
        public virtual ObjectResult<Sub_getCatalog_Upper_Result> Sub_getCatalog_Upper(Nullable<int> prodcatid)
        {
            var prodcatidParameter = prodcatid.HasValue ?
                new ObjectParameter("prodcatid", prodcatid) :
                new ObjectParameter("prodcatid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sub_getCatalog_Upper_Result>("Sub_getCatalog_Upper", prodcatidParameter);
        }
    }
}
