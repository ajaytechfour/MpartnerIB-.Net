@using PagedList;
@using PagedList.Mvc;
@model  IPagedList<LuminousMpartnerIB.EF.Banner>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Error.cshtml";
}

<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.js"></script>*@

<script type="text/javascript">
    $(function () {
        $(".date").datepicker(
     { dateFormat: "dd-mm-yy" }
        );
        ValidationMessage();
    });

    function ValidationMessage() {
        if ('@ViewBag.StartDate' != "") {
            $("#sdate").text('@ViewBag.StartDate');
        }

        if ('@ViewBag.EndDate' != "") {
            $("#edate").text('@ViewBag.EndDate');
        }

        if ('@ViewBag.File' != "") {
            $("#file").text('@ViewBag.File');
        }
        if ('@ViewBag.SaveStatus' != "") {
            alert('@ViewBag.SaveStatus');
            location.href = "@Url.Content("~/Banner/Index")";
        }
        $("#stdate").val('@ViewBag.preStartDate');
        $("#etdate").val('@ViewBag.PreEndDate');

    }
</script>
<style type="text/css">
    .required {
        color: Red;
    }

    table {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }

        table table {
            font-size: 1em;
        }

    #footer-wrapper table {
        font-size: 1em;
    }

    table tr th {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }

        table tr th,
        table tr th a,
        table tr th a:hover {
            color: #FFF;
            font-weight: bold;
        }

    table tbody tr th {
        vertical-align: top;
    }

    tr td,
    tr th {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }

    #footer-wrapper tr td,
    #footer-wrapper tr th {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }

    tr.odd {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }

    tr,
    tr.even {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }

    table ul.links {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }

        table ul.links li {
            padding: 0 1em 0 0;
        }
</style>

<script type="text/javascript">
    //Grid Swapping//
    $(document).ready(function () {
        var coords = new Array();
        $('#Grid tbody').addClass("DragMe");

        $('.DragMe').sortable({
            disabled: false,
            axis: 'y',
            //items: "> tr:not(:first)",
            forceHelperSize: true,
            update: function (event, ui) {
                var Newpos = ui.item.index();
                var RefID = $('tr').find('td:first').html();
                //var RefID=   $(this).closest('tr').attr('id');

                //alert("Position " + Newpos + "..... RefID: " + RefID);
                $("#Grid tr:has(td)").each(function () {

                    var RefID = $(this).find("td:eq(0)").html();
                    var NewPosition = $(".ui-sortable-handle").index(this) + 1;
                    // alert(RefID + " " + NewPosition);
                    coords.push({ x: RefID, y: NewPosition });
                });

                for (var i = 0; i < coords.length; i++) {
                    var xcoord = coords[i].x + "," + coords[i].y;

                    var arr = { ids: xcoord };
                    $.ajax({
                        url: '@Url.Action("UpdateSequence", "Banner")',
                        type: 'POST',
                        data: JSON.stringify(arr),
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        success: function (msg) {
                            alert(msg);
                        }
                    });
                }

                coords.length = 0;


            }
        }).disableSelection();
    });

    //Grid Swap End//
    $(function () {
        $("#trprdcat").hide();
        $("#trprdlevel").hide();
        $("#trmedia").hide();
        $("#td_parentcategorylabel").hide();
        $("#td_parentcategorytext").hide();
        $.post("@Url.Content("~/Banner/GetBannerDetail")", null, function (data) { SetGrid(data); }, "Json");
        $.post("@Url.Content("~/ProductCategory/GetParentCategory")", null, function (data) { SetParentCategory(data); }, "Json");
        $.post("@Url.Content("~/Banner/GetRedirectPage")", null, function (data) { SetRedirectPage(data); }, "Json");
    });
    function SetGrid(data) {

        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            var body = "";
            $("#Grid tbody").empty();
            $.each(data.result, function (key, value) {
                var pagename = value.PageName;
                if (pagename == null || pagename == "") {
                    var PName = "";
                }
                else {
                    var PName = value.PageName;
                }

                body += "<tr class=ui-sortable-handle><td>" + value.id + "</td>" +
             "<td>" + value.Hdetails + "</td>" +
                "<td>" + value.sHeader + "</td>" +
            "<td>" + value.BannerDetail + "</td>" +
             "<td>" + PName + "</td>" +
             "<td>" + value.startdate + "</td>" +
             "<td>" + value.expiryDate + "</td>" +
                 "<td>" + value.status + "</td>" +
            "<td><img src=" + "@Url.Content("~/Banners/")" + value.bannerImage + " style='height: 52px;width: 53px;' /> </td>" +
            "<td><a style='cursor:pointer' onclick=Edit(" + value.id + ");>Edit</a> <a style='cursor:pointer' onclick=Delete(" + value.id + ");>Delete</a></td></tr>";

            });
            $("#Grid tbody").append(body);
            SetPages(data.TotalRecord);

        }

    }
    function Delete(id) {
        if (confirm("Do You Want To Delete This Record")) {

            $.post("@Url.Content("~/Banner/Delete")", { id: id }, function (data) {
                $.post("@Url.Content("~/Banner/GetBannerDetail")", null, function (data) { SetGrid(data); }, "Json");

                alert(data);

            }, "Json");
        }
    }

    function Edit(id) {
        location.href = "@Url.Content("~/Banner/Edit/")" + id;
    }
    function SetPages(paging) {
        var pages = "";
        $("#Paging").empty();
        for (var i = 1; i <= parseInt(paging) ; i++) {
            pages += "<a style='cursor:pointer' onclick=GetPagesValues(" + i + ");> " + i + "  </a>";

        }
        $("#Paging").append("<u> Pages:-</u>" + pages);
    }

    //    function GetPagesValues(id) {
    //        $.post("@Url.Content("~/Banner/GetBannerDetail")", { page: id }, function (data) { SetGrid(data); }, "Json");
    //    }


    //Set Parent Category//
    function SetParentCategory(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#ParentCategory");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }
    }


    // SetParent Category end

    //Set Product Category.//
    function SetProdcutlevelOne() {
        var procat = $("#ProductCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: procat }, function (data) { SetProdcutCategoryPC(data, 'pclvlOne'); }, "Json");
    }


    function SetProdcutCategoryPC(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }

    }
    // SetProduct Category end

    //End//

    function SetProdcutCat() {


        var procat = $("#ParentCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwoSequence/GetProductCategory")", { procatid: procat }, function (data) { SetProdcutCategory(data); }, "Json");


    }


    function SetProdcutCategory(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            //option = "";
            //var procat = $("#" + id);
            //procat.empty();
            option = "";
            var procat = $("#ProductCategory");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);

        }

    }


    //Set Product Level Two//

    function SetProdcutlevelTwo() {
        var procat = $("#ProductCategory :selected").val();
        var procat2 = $("#pclvlOne :selected").val();
        $.post("@Url.Content("~/ProductLevel3/GetProductLevelTwoCategory")", { procatid: procat, procatone: procat2 }, function (data) { SetProdcutCategoryPC(data, 'pclvlTwo'); }, "Json");
    }


    function SetProdcutCategoryPC(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }

    }

    //End//

    // Set Product Level Three//

    function GetProductLvl3() {
        var procat = $("#ProductCategory :selected").val();
        var procat2 = $("#pclvlOne :selected").val();

        var procat3 = $("#pclvlTwo :selected").val();

        $.post("@Url.Content("~/ProductLevelThree/GetProductLevel3")", { productid: procat, ProductlvlOneid: procat2, ProductLvlTwoId: procat3 }, function (data) { SetProdcutLevelthree(data, 'pclvlthree'); }, "Json");
    }


    function SetProdcutLevelthree(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            alert(id);
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }

    }

    // End //


    //Set Redirect Data//

    //Set Redirect Page//
    function SetRedirectPage(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#redirectpage");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }
    }



    //End//

    function Redirectpage(id) {
        if (id != 5) {
            if (id == 1) {
                $("#trprdcat").show();
                $("#trprdlevel").show();
                $("#td_parentcategorylabel").show();
                $("#td_parentcategorytext").show();
                $("#trmedia").hide();
            }
            if (id == 2 || id == 3) {
                $("#trprdcat").show();
                $("#trprdlevel").hide();
                $("#td_parentcategorylabel").show();
                $("#td_parentcategorytext").show();
                $("#trmedia").hide();
            }
            if (id == 4) {
                $("#trprdcat").hide();
                $("#trprdlevel").hide();
                $("#td_parentcategorylabel").show();
                $("#td_parentcategorytext").show();
                $("#trmedia").show();
                $.post("@Url.Content("~/Banner/GetMedia")", null, function (data) { SetMediaData(data); }, "Json");
            }
            else {
                // alert("dfgd");
                $("#media").empty();
                $("#media").append("<option value=0>Select</option>");
            }
        }
        else {
            $("#trprdcat").hide();
            $("#trprdlevel").hide();
            $("#trmedia").hide();
            $("#td_parentcategorylabel").hide();
            $("#td_parentcategorytext").hide();
        }
    }

    //Media Data //
    function SetMediaData(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#media");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }
    }
    // End //
</script>
<div>

</div>
@using (@Html.BeginForm("Save", "Banner", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    <div id="content_wrap">
        <div class="msgbar msg_Info heading">Banner</div>
        <div class="content_main">
            <div class="boxes1">



                <table style="width: 100%;">
                    <tr>
                        <td style="width: 137px;">
                            Banner Header <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.EditorFor(a => a.FirstOrDefault().Header_Details)<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().Header_Details, "", new { @class = "required" })
                        </td>
                        <td style="width: 137px;">
                            Sub Header <span style="color: red;">*</span>
                        </td>
                        <td>
                            @Html.EditorFor(a => a.FirstOrDefault().Sub_Header_Details)<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().Sub_Header_Details, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Description <span style="color: red;">*</span>
                        </td>
                        <td colspan="3">
                            @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                            @Html.TextAreaFor(a => a.FirstOrDefault().Banner_Details, 5, 50, new { })<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().Banner_Details, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr>
                        <td style="width: 124px;">
                            Redirect Page<span class="required">*</span>
                        </td>
                        <td style="width: 221px">
                            <select name="redirectpage" onchange="Redirectpage(value);" style="color: black" id="redirectpage">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().RedirectPage, "", new { @class = "required" })
                        </td>
                        <td style="width: 137px;" id="td_parentcategorylabel">
                            Parent Category <span class="required">*</span>
                        </td>
                        <td style="width: 221px" id="td_parentcategorytext">
                            <select name="ParentCatid" onchange="SetProdcutCat();" style="color: black" id="ParentCategory">
                                <option>Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().ParentCatid, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr id="trprdcat">

                        <td style="width: 137px;" >
                            Product Category <span class="required">*</span>
                        </td>
                        <td style="width: 221px" >

                            <select name="pcId" onchange="SetProdcutlevelOne();" style="color: black" id="ProductCategory">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().CategoryId, "", new { @class = "required" })
                            <span id="pcIdValidation"></span>
                        </td>
                        <td style="width: 124px;">
                            Product Level One<span class="required">*</span>
                        </td>
                        <td style="width: 221px">
                            <select name="ProductLvl1" onchange="SetProdcutlevelTwo();" style="color: black"
                                    id="pclvlOne">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().ProductLevelOne, "", new { @class = "required" })
                        </td>
                    </tr>
                    <tr id="trprdlevel">

                        <td style="width: 124px;">
                            Product Level Two<span class="required">*</span>
                        </td>
                        <td style="width: 221px">
                            <select name="ProductLvl2" onchange="GetProductLvl3();" style="color: black" id="pclvlTwo">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().ProductLeveltwo, "", new { @class = "required" })
                        </td>
                        <td style="width: 124px;">
                            Product Level Three<span class="required">*</span>
                        </td>
                        <td style="width: 221px">
                            <select name="ProductLvl3" onchange="SetProdcutlevelthree();" style="color: black"
                                    id="pclvlthree">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().ProductLevelThreeId, "", new { @class = "required" })
                        </td>

                    </tr>
                    <tr id="trmedia">

                        <td style="width: 124px;">
                            Media<span class="required">*</span>
                        </td>
                        <td style="width: 221px">
                            <select name="media" style="color: black" id="media">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(model => model.FirstOrDefault().Media, "", new { @class = "required" })
                        </td>


                    </tr>



                    <tr>
                        <td>
                            Start Date<span style="color: red;">*</span>
                        </td>
                        <td>
                            <input id="stdate" type="text" class="date" name="StartDate" /><br />
                            <span id="sdate" class="required"></span>
                        </td>
                        <td>
                            End Date <span style="color: red;">*</span>
                        </td>
                        <td>
                            <input id="etdate" type="text" class="date" name="EndDate" />
                            <br />
                            <span id="edate" class="required"></span>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Status <span style="color: red;">*</span>
                        </td>
                        <td>
                            <input id="status" type="checkbox" checked="checked" name="Status" />
                            <br />
                            <span class="Status"></span>
                        </td>
                        <td>
                            Upload Image <span style="color: red;">*</span>
                        </td>
                        <td>
                            <input type="file" name="postedFile" />
                            <br />
                            <span id="file" class="required"></span>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" align="center">
                            <input type="submit" class="save-but-m" value="Submit" />
                        </td>

                    </tr>
                </table>

            </div>
        </div>
    </div>



}
<div id="list" style="width: 997px; float: right; margin-right: 15px;">
    <table id="Grid">
        <thead>
            <tr>
                <th>
                    ID
                </th>
                <th>
                    Banner Header
                </th>
                <th>
                    Sub Header
                </th>
                <th>
                    Description
                </th>
                <th>
                    Redirect Page
                </th>
                <th>
                    Start Date
                </th>
                <th>
                    End Date
                </th>
                <th>
                    Status
                </th>
                <th>
                    Image
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div id="Paging">
    </div>
</div>