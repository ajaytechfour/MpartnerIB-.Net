@model Luminous.EF.PermotionsList
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="@Url.Content("~/assets/css/Formstyle.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>
<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
<link href="@Url.Content("~/assets/css/chosen.css")" rel="stylesheet" type="text/css" />
<style type="text/css">
    .required
    {
        color: Red;
    }
    table
    {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }
    table table
    {
        font-size: 1em;
    }
    #footer-wrapper table
    {
        font-size: 1em;
    }
    table tr th
    {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }
    table tr th, table tr th a, table tr th a:hover
    {
        color: #FFF;
        font-weight: bold;
    }
    table tbody tr th
    {
        vertical-align: top;
    }
    tr td, tr th
    {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }
    #footer-wrapper tr td, #footer-wrapper tr th
    {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }
    tr.odd
    {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }
    tr, tr.even
    {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }
    table ul.links
    {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }
    table ul.links li
    {
        padding: 0 1em 0 0;
    }
</style>
<style>
    .FullDes
    {
        position: relative;
        background-color: #1D1D1D;
        width: 245px;
        color: white;
        border: 1px solid black;
        display: none;
    }
</style>
<script type="text/javascript">
    $(function () {
        $.post("@Url.Content("~/ProductCategory/GetParentCategory")", null, function (data) { SetParentCategory(data); }, "Json");
        $.post("@Url.Content("~/CreatePermotions/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");
        $.post("@Url.Content("~/Destributor/GetRegions")", null, function (data) { SetProdcutCategory(data, 'RegionList'); },
        "Json");
        $(".date").datepicker(
     { dateFormat: "dd-mm-yy" }
        );
        $("#DestributorList").chosen({ width: "100px" });
        $("#DealerList").chosen({ width: "100px" });

        ValidationMessage();

    });

</script>
<script type="text/javascript">
    function ValidationMessage() {
        if ('@ViewBag.StartDate' != "") {
            $("#sdate").text('@ViewBag.StartDate');
        }

        if ('@ViewBag.EndDate' != "") {
            $("#edate").text('@ViewBag.EndDate');
        }

        if ('@ViewBag.File' != "") {
            $("#file").text('@ViewBag.File');
        }
        if ('@ViewBag.SaveStatus' != "") {
            alert('@ViewBag.SaveStatus');
            location.href = "@Url.Content("~/CreatePermotions/Index")";
        }
        $("#sdate").val('@ViewBag.preStartDate');
        $("#edate").val('@ViewBag.PreEndDate');
        debugger;
    }
</script>
<script type="text/javascript">
    $(function () {
        $.post("@Url.Content("~/CreatePermotions/GetProductCategory")", null, function (data) { SetProdcutCategoryLoadPCC(data, 'Ptype'); },
     "Json");
        $.post("@Url.Content("~/ProductLevelOne/GetProductCategory")", null, function (data) { SetProdcutCategoryLoadPCC(data, 'ProductCategory'); },
        "Json");

        //Set DropDown By Previous Values Begin
        if ('@ViewBag.ProductCat1' != '') {
            $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: '@ViewBag.ProductCat' }, function (data) { SetProdcutCategoryLoad(data, 'pclvlOne'); }, "Json");
        }

        //Set DropDown By Previous Values end
    });

    function SetGrid(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            var body = "";
            $("#Grid tbody").empty();
            $.each(data.result, function (key, value) {
                var Description = value.Descriptions.toString(); 
                var shorDescriptions = Description.substring(0, 10);
                body += "<tr><td> PLI" + value.id + "</td>" +
                     "<td>" + value.ParntCat + "</td>" +
                "<td>" + value.ProCatTwo + "</td>" +
                "<td>" + value.PCat + "</td>" +
            "<td>" + value.proCatOne + "</td>" +


            "<td><div style='Position:absolute;cursor:pointer'> <span class='Des' onmouseout='hideFullDescription(this);' onmouseover='showFullDescription(this);'>" + shorDescriptions + "</span><div style='position:relative;' class='FullDes'>" + Description + "</div></div></td>" +
             "<td>" + value.StartDate + "</td>" +
             "<td>" + value.EndDate + "</td>" +
             "<td>" + value.status + "</td>" +

            "<td>  <a style='cursor:pointer' onclick=Edit(" + value.id + ");>Edit</a> <a style='cursor:pointer' onclick=Delete(" + value.id + ");>Delete</a></td></tr>";
                
            });
            $("#Grid tbody").append(body);
            SetPages(data.TotalRecord)
        }
    }
    function SetPages(paging) {
        var pages = "";
        $("#Paging").empty();
        for (var i = 1; i <= parseInt(paging); i++) {
            pages += "<a style='cursor:pointer' onclick=GetPagesValues(" + i + ");> " + i + "  </a>";
            
        }
        $("#Paging").append("<u> Pages:-</u>" + pages);
    }
    function GetPagesValues(id) {
        $.post("@Url.Content("~/CreatePermotions/GetContactDetail")", { page: id }, function (data) { SetGrid(data); }, "Json");
    }
    function Edit(id) {
        location.href = "@Url.Content("~/CreatePermotions/Edit/")" + id;
    }
    function Delete(id) {
        if (confirm("Do You Want To Delete This Record")) {

            $.post("@Url.Content("~/CreatePermotions/Delete")", { id: id }, function (data) {
                $.post("@Url.Content("~/CreatePermotions/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");

                alert(data);

            }, "Json");
        }
    }

    function showFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").show();
    }
    function hideFullDescription(currentTag) {
        $(currentTag).parent().find(".FullDes").hide();
    }
    function SetProdcutCategory(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0 disabled='disabled'>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }
    }

    function SetProdcutCategoryLoad(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0 disabled='disabled'>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            if ('@ViewBag.ProductCat' != "") {

                $("#ProductCategory").val('@ViewBag.ProductCat');
            }
            if ('@ViewBag.ProductCat1' != "") {
                $("#pclvlOne").val('@ViewBag.ProductCat1');
            }
            if ('@ViewBag.Ptype' != "") {
                $("#Ptype").val('@ViewBag.Ptype');
            }
        }

    }


    //Data First Load For Promotion ,Product Category, Product Level One
    function SetProdcutCategoryLoadPCC(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0 >Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            if ('@ViewBag.ProductCat' != "") {

                $("#ProductCategory").val('@ViewBag.ProductCat');
            }
            if ('@ViewBag.ProductCat1' != "") {
                $("#pclvlOne").val('@ViewBag.ProductCat1');
            }
            if ('@ViewBag.Ptype' != "") {
                $("#Ptype").val('@ViewBag.Ptype');
            }
        }

    }
    // Data Fill for Promotion ,Product Category, Product Level One
    function SetProdcutCategoryLoadPC(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")"
            ;
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
//            if ('@ViewBag.ProductCat' != "") {

//                $("#ProductCategory").val('@ViewBag.ProductCat');
//            }
//            if ('@ViewBag.ProductCat1' != "") {
//                $("#pclvlOne").val('@ViewBag.ProductCat1');
//            }
//            if ('@ViewBag.Ptype' != "") {
//                $("#Ptype").val('@ViewBag.Ptype');
//            }
        }

    }
    //
    //Set Parent Category//
    function SetParentCategory(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#ParentCategory");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
        }
    }
    function SetProdcutlevelOne() {
        var procat = $("#ProductCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: procat }, function (data) { SetProdcutCategoryLoadPC(data, 'pclvlOne'); }, "Json");
    }
</script>
<script type="text/javascript">
    function Allch() {
        if ($("#All").is(":checked")) {
            $("#region").attr("disabled", true);
            $("#destributor").attr("disabled", true);
            $("#Dealer").attr("disabled", true);
            $("#userupload_file").attr("disabled", true);
            $("#RegionList_chosen").hide();
            $("#DestributorList_chosen").hide();
            $("#DealerList_chosen").hide();
            $("#checkDistri").hide();
             $("#checkDeal").hide();
        }
        else {
            $("#region").attr("disabled", false);
            $("#destributor").attr("disabled", false);
            $("#Dealer").attr("disabled", false);
            $("#userupload_file").attr("disabled", false);
            $("#RegionList_chosen").show();
            $("#DestributorList_chosen").show();
            $("#DealerList_chosen").show();
               $("#checkDistri").show();
             $("#checkDeal").show();
        }

    }


    function GetRegions() {
        $.post("@Url.Content("~/Destributor/GetRegions")", null, function (data) { SetProdcutCategory(data, 'RegionList'); },
                 "Json");
        $("#RegionList_chosen").show();
    }
    function GetDestributor() {

        SetDestributor();

        //        $.post("../Dealers/GetAllDestributors", null, function (data) { SetProdcutCategory(data, 'DestributorList'); }, "Json");



    }
    function GetDealer() {

        SetDealer();
        //$.post("../Dealers/GetAllDealer", null, function (data) { SetProdcutCategory(data, 'DealerList'); }, "Json");

    }
    function SetProdcutCategory(data, id) {
        option = "";
        var procat = $("#" + id);
        procat.empty();
        procat.append("<option value=0 disabled='disabled' >Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);
        procat.chosen({ width: "100px" });
        procat.trigger("chosen:updated");

    }

    function SetRegion() {
        $("#RgList").val($("#RegionList").val());
        var regionlist = $("#RgList").val();

        $.post("@Url.Content("~/Dealers/GetDestributorsByMultiPleids")", { RegionId: regionlist }, function (data) { SetProdcutCategory(data, 'DestributorList'); }, "Json");
    }
    function SetDestributor() {
        $("#disList").val($("#DestributorList").val());

        var regionlist = $("#disList").val();

        $.post("@Url.Content("~/Dealers/GetAllDealerByMultiPleIds")", { RegionId: regionlist }, function (data) { SetProdcutCategory(data, 'DealerList'); }, "Json");
    }
    function SetDealer() {
        $("#Dealist").val($("#DealerList").val());
    }
</script>
<div id="form" style="margin-bottom: 11px">
    @using (Html.BeginForm("SaveContact", "CreatePermotions", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {

        <div id="content_wrap">
            <div class="msgbar msg_Info heading">
                Promotion
            </div>
            <div class="content_main">
                <div class="boxes1">
                    <table id="GridView">
                        <tr>
                            <td style="width: 137px;">
                                Parent Category <span class="required">*</span>
                            </td>
                            <td style="width: 221px">
                                <select name="ParentCatid" style="color: black" id="ParentCategory">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(model => model.ParentCatid, "", new { @class = "required" })
                            </td>
                            <td style="width: 137px;">
                                Promotion Type<span class="required">*</span>
                            </td>
                            <td style="width: 221px">
                                <select name="Ptype" style="color: black" id="Ptype">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(a => a.PermotionTypeId, "", new { @class = "required" })
                            </td>

                        </tr>
                        <tr>
                            <td style="width: 138px;">
                                Product Category <span class="required">*</span>
                            </td>
                            <td>
                                <select name="Pcat" onchange="SetProdcutlevelOne();" style="color: black" id="ProductCategory">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(a => a.ProductCatId, "", new { @class = "required" })
                            </td>
                            <td>
                                Product Level One<span class="required">*</span>
                            </td>
                            <td>
                                <select name="PlvlOne" style="color: black" id="pclvlOne">
                                    <option>Select</option>
                                </select>
                                <br />
                                @Html.ValidationMessageFor(a => a.ProductLvlOneId, "", new { @class = "required" })
                            </td>

                        </tr>
                        <tr>
                            <td>
                                Upload Images<span class="required">*</span>
                            </td>
                            <td>
                                <input type="file" multiple="multiple" name="file" />
                                <br />
                                @Html.ValidationMessageFor(a => a.ImageName, "", new { @class = "required" })
                            </td>
                            <td>
                                Description<span class="required">*</span>
                            </td>
                            <td>
                                @Html.TextAreaFor(a => a.Descriptions, 5, 50, new { })
                                <br />
                                @Html.ValidationMessageFor(a => a.Descriptions, "", new { @class = "required" })
                            </td>

                        </tr>
                        <tr>

                            <td>
                                Start Date<span class="required">*</span>
                            </td>
                            <td>
                                <input id="sdate" type="text" class="date" name="StartDate" />
                                <br />
                                @*@Html.ValidationMessageFor(a => a.StartDate, "", new { @class = "required" })*@
                            </td>
                            <td>
                                End Date<span class="required">*</span>
                            </td>
                            <td>
                                <input id="edate" type="text" class="date" name="EndDate" />
                                <br />
                                @Html.ValidationMessageFor(a => a.Enddate, "", new { @class = "required" })
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Permission For <span class="required">*</span>
                            </td>
                            <td colspan="3">
                                <table>
                                    <tr>
                                        <td style="padding-right: 18px;">
                                            All
                                        </td>
                                        <td style="padding-right: 18px;">
                                            Region
                                        </td>
                                        <td style="padding-right: 18px;">
                                            Distributor
                                        </td>
                                        <td style="padding-right: 18px;">
                                            Dealer
                                        </td>
                                        <td style="padding-right: 18px;">
                                            Upload User
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <input type="checkbox" name="Alls" onchange="Allch();" id="All" />
                                        </td>
                                        <td valign="top">
                                            <select id="RegionList" data-placeholder="Select" onchange="SetRegion();" multiple="multiple" class="chosen-select"
                                                    style="color: black;"></select>
                                            <input type="hidden" id="RgList" name="rglist" />
                                        </td>
                                        <td valign="top">
                                            @*                                            <select id="DestributorList"  data-placeholder="Select" onchange="SetDestributor();" multiple="multiple" style="color: black;">
                                                    <option value="0" disabled="disabled">Select</option>
                                                </select>*@
                                            @*  <input type="hidden" id="disList" name="disList" />*@
                                            <input type="checkbox" id="checkDistri" name="DistriCheck" />
                                        </td>
                                        <td valign="top">
                                            @*                                            <select id="DealerList" data-placeholder="Select"  name="dlist" onchange="SetDealer();" multiple="multiple"
                                                    style="color: black;">
                                                    <option value="0" disabled="disabled">Select</option>
                                                </select>*@
                                            @*   <input type="hidden" id="Dealist" name="Dealist" />*@
                                            <input type="checkbox" id="checkDeal" name="DealCheck" />
                                        </td>
                                        <td valign="top">

                                            <input type="file" name="userupload_file" id="userupload_file" /> <a href="~/Format/UsersFormat.csv">Download Format</a>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="5">
                                            @Html.ValidationMessageFor(a => a.status, "", new { @class = "required" })
                                        </td>
                                    </tr>
                                </table>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                Upload PDF<span class="required">*</span>
                            </td>
                            <td>
                                <input type="file" name="Pdf_file" />
                                <br />
                                @Html.ValidationMessageFor(a => a.PDFName, "", new { @class = "required" })
                            </td>
                            <td>
                                Status
                            </td>
                            <td>
                                <input type="checkbox" checked="checked" name="statusC" />
                            </td>
                        </tr>
                    </table>
                    <input type="submit" value="Submit" />
                </div>
            </div>
        </div>


    }
    <div style="float:right;margin-right:12px">
        @using (Html.BeginForm("Index", "CreatePermotions", FormMethod.Post,
                                      new { enctype = "multipart/form-data" }))
        {
            <table>
                <tr>
                    <td>
                        @Html.TextBox("Search", null, new { Id = "txtsearch", @placeholder = "Search" })
                    </td>
                    <td></td>
                    <td>
                        <input type="submit" id="btnsearch" value="Search" />
                    </td>
                </tr>
            </table>

        }
    </div>
</div>
<div id="list">
    <div id="list" style="width: 997px; float: right; margin-right: 15px;">
        <table id="Grid" width="100%">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Parent Category
                    </th>
                    <th>
                        Promotion Type
                    </th>
                    <th>
                        Product Category
                    </th>
                    <th>
                        Product Level One
                    </th>
                    <th>
                        Descriptions
                    </th>
                    <th>
                        Start Date
                    </th>
                    <th>
                        End Date
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        Action
                    </th>
                </tr>

            </thead>
            <tbody></tbody>
            <tfoot>
                <tr>
                    <td colspan="9">
                        <div id="Paging">
                        </div>
                    </td>



                </tr>
            </tfoot>
        </table>
        <div style="float:right">
            @if (Session["Search"] != null)
            {
                @Html.ActionLink("Back", "Index")
            }
        </div>
    </div>
</div>