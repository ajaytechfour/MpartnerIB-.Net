@model LuminousMpartnerIB.EF.luminious_Update
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/Error.cshtml";
}
<link href="@Url.Content("~/assets/css/Formstyle.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>
@*<script src="~/CKLumupdate/ckeditor.js"></script>*@
<style type="text/css">
    .required
  {
    	color:Red;
 }
table {
border: 0;
border-spacing: 0;
font-size: 0.857em;
margin: 10px 0;
width: 100%;
}
table table {
font-size: 1em;
}
#footer-wrapper table {
font-size: 1em;
}
table tr th {
background: #757575;
background: rgba(0, 0, 0, 0.51);
border-bottom-style: none;
}
table tr th,
table tr th a,
table tr th a:hover {
color: #FFF;
font-weight: bold;
}
table tbody tr th {
vertical-align: top;
}
tr td,
tr th {
padding: 4px 9px;
border: 1px solid #fff;
text-align: left; /* LTR */
}
#footer-wrapper tr td,
#footer-wrapper tr th {
border-color: #555;
border-color: rgba(255, 255, 255, 0.18);
}
tr.odd {
background: #e4e4e4;
background: rgba(0, 0, 0, 0.105);
}
tr,
tr.even {
background: #efefef;
background: rgba(0, 0, 0, 0.063);
}
table ul.links {
margin: 0;
padding: 0;
font-size: 1em;
}
table ul.links li {
padding: 0 1em 0 0;
}
</style> 
<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Redirectpage' != "5") {
        if ('@ViewBag.Redirectpage' == "1") {

            $("#trprdcat").show();
            $("#trprdlevel").show();
            $("#trmedia").hide();
        }
        if ('@ViewBag.Redirectpage' == "2" || '@ViewBag.Redirectpage' == "3") {

            $("#trprdcat").show();
            $("#trprdlevel").hide();
            $("#trmedia").hide();
        }
        if ('@ViewBag.Redirectpage' == "4") {

            $("#trprdcat").hide();
            $("#trprdlevel").hide();
            $("#trmedia").show();
        }
        }
        else {
            $("#trprdcat").hide();
            $("#trprdlevel").hide();
            $("#trmedia").hide();
            $("#td_parentcategorylabel").hide();
            $("#td_parentcategorytext").hide();
        }

    });


    $(function () {
        $.post("@Url.Content("~/Banner/GetRedirectPage")", null, function (data) { SetRedirectPage(data); }, "Json");
        $.post("@Url.Content("~/ProductCategory/GetParentCategory")", null, function (data) { SetParentCategory(data); }, "Json");
        $.post("@Url.Content("~/ProductLevelOne/GetProductCategory")", null, function (data) { SetProdcutCategory(data, 'ProductCategory'); },
        "Json");

        if ('@ViewBag.ProductCat' != null && '@ViewBag.ProductCat' != '0') {
            $.post("@Url.Content("~/ProductLevelTwoSequence/GetProductCategory")", { procatid: '@ViewBag.Prntid' }, function (data) { SetProdcutCategory(data); }, "Json");

        }
        if ('@ViewBag.Productlvl1' != null && '@ViewBag.Productlvl1' != '0') {
            $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: '@ViewBag.ProductCat' }, function (data) { SetProdcutCategoryPC(data, 'pclvlOne'); }, "Json");

        }
        if ('@ViewBag.Productlvl2' != null && '@ViewBag.Productlvl2' != '0') {
            var procat = '@ViewBag.ProductCat';

            var procat2 = '@ViewBag.Productlvl1';
            $.post("@Url.Content("~/ProductLevel3/GetProductLevelTwoCategory")", { procatid: procat, procatone: procat2 }, function (data) { SetProdcutCategorylvltwo(data, 'pclvlTwo'); }, "Json");
        }

        if ('@ViewBag.Productlvl3' != null && '@ViewBag.Productlvl3' != '0') {
            var procat = '@ViewBag.ProductCat';
            var procat2 = '@ViewBag.Productlvl1';

            var procat3 = '@ViewBag.Productlvl2';

            $.post("@Url.Content("~/ProductLevelThree/GetProductLevel3")", { productid: procat, ProductlvlOneid: procat2, ProductLvlTwoId: procat3 }, function (data) { SetProdcutLevelthree(data, 'pclvlthree'); }, "Json");

        }
        if ('@ViewBag.media' != "0" && '@ViewBag.media' != null) {
            @*var procat = '@ViewBag.ProductCat';
            var procat2 = '@ViewBag.Productlvl1';

            var procat3 = '@ViewBag.Productlvl2';*@

            // var procat = ' @ViewBag.Prntid'

            $.post("@Url.Content("~/Banner/GetMedia")",null, function (data) { SetMediaData(data); }, "Json");
        }
    });
    //Set Redirect Page//
    function SetRedirectPage(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#redirectpage");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.Redirectpage');
        }
    }



    //End//

    //Set Parent Category//
    function SetParentCategory(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#ParentCategory");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.Prntid');

        }
    }


    // SetParent Category end

    // Set Product category  //
    function SetProdcutCategory(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            //option = "";
            //var procat = $("#" + id);
            //procat.empty();
            option = "";
            var procat = $("#ProductCategory");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.ProductCat');

        }

    }
    // Set Product category end //

    //Set Product level one //
    function SetProdcutCategoryPC(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.Productlvl1');

        }

    }

    //Set Product level one end //

    //Set product level two//

    function SetProdcutCategorylvltwo(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.Productlvl2');

        }

    }
    //End //

    //Set Product Level three//
    function SetProdcutLevelthree(data, id) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {

            option = "";
            var procat = $("#" + id);
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.Productlvl3');
        }

    }
    //End//

    //Set Product Category on Change .//
    function SetProdcutCat() {


        var procat = $("#ParentCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwoSequence/GetProductCategory")", { procatid: procat }, function (data) { SetProdcutCategory(data); }, "Json");


    }

    //Set Product level one on Change .//
    function SetProdcutlevelOne() {
        var procat = $("#ProductCategory :selected").val();
        var procatLvlOne = $("#pclvlOne");
        $.post("@Url.Content("~/ProductLevelTwo/GetProductLevelOneCategory")", { procatid: procat }, function (data) { SetProdcutCategoryPC(data, 'pclvlOne'); }, "Json");
    }

    //Set Product Level Two on Change//

    function SetProdcutlevelTwo() {
        var procat = $("#ProductCategory :selected").val();
        var procat2 = $("#pclvlOne :selected").val();
        $.post("@Url.Content("~/ProductLevel3/GetProductLevelTwoCategory")", { procatid: procat, procatone: procat2 }, function (data) { SetProdcutCategoryPC(data, 'pclvlTwo'); }, "Json");
    }

    // Set Product Level Three on change//

    function GetProductLvl3() {
        var procat = $("#ProductCategory :selected").val();
        var procat2 = $("#pclvlOne :selected").val();

        var procat3 = $("#pclvlTwo :selected").val();

        $.post("@Url.Content("~/ProductLevelThree/GetProductLevel3")", { productid: procat, ProductlvlOneid: procat2, ProductLvlTwoId: procat3 }, function (data) { SetProdcutLevelthree(data, 'pclvlthree'); }, "Json");
    }
    function Redirectpage(id) {
        if (id != 5) {
        if (id == 1) {
            $("#trprdcat").show();
            $("#trprdlevel").show();
            $("#td_parentcategorylabel").show();
            $("#td_parentcategorytext").show();
            $("#trmedia").hide();
        }
        if (id == 2 || id == 3) {
            $("#trprdcat").show();
            $("#trprdlevel").hide();
            $("#td_parentcategorylabel").show();
            $("#td_parentcategorytext").show();
            $("#trmedia").hide();
        }
        if (id == 4) {
            $("#trprdcat").hide();
            $("#trprdlevel").hide();
            $("#td_parentcategorylabel").show();
            $("#td_parentcategorytext").show();
            $("#trmedia").show();
            $.post("@Url.Content("~/Banner/GetMedia")", null, function (data) { SetMediaData(data); }, "Json");
        }
        else {
            // alert("dfgd");
            $("#media").empty();
            $("#media").append("<option value=0>Select</option>");
        }
        }

        else {
            $("#trprdcat").hide();
            $("#trprdlevel").hide();
            $("#trmedia").hide();
            $("#td_parentcategorylabel").hide();
            $("#td_parentcategorytext").hide();

        }
    }
    //Media Data //
    function SetMediaData(data) {
        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            option = "";
            var procat = $("#media");
            procat.empty();
            procat.append("<option value=0>Select</option>");
            $.each(data, function (key, value) {
                option += "<option value=" + value.id + ">" + value.Name + "</option>";

            });
            procat.append(option);
            procat.val('@ViewBag.media');
            
        }
    }
    // End Media Data //

    $(function () {
        $(".date").datepicker(
     { dateFormat: "dd-mm-yy" }
        );
        ValidationMessage();
    });

    function ValidationMessage() {
        if ('@ViewBag.StartDate' != "") {
            $("#sdate").text('@ViewBag.StartDate');
        }

        if ('@ViewBag.EndDate' != "") {
            $("#edate").text('@ViewBag.EndDate');
        }

        if ('@ViewBag.File' != "") {
            $("#file").text('@ViewBag.File');
        }
        if ('@ViewBag.preStatus' == "1") {

            $("#Status").prop("checked", "checked");

        }
        if ('@ViewBag.Update' == "Done") {
            alert("Updation Done Successfully");
            location.href = "@Url.Content("~/LuminiousUpdate/index")";
        }
        $("#stdate").val('@ViewBag.preStartDate');
        $("#etdate").val('@ViewBag.PreEndDate');

    }
</script>

@using (@Html.BeginForm("Update", "LuminiousUpdate", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
     @Html.AntiForgeryToken()
    <div id="content_wrap">
      <div class="msgbar msg_Info heading">Edit Luminious Updates</div>
      <div class="content_main" >
        <div class="boxes1">


         
        <table style="width: 100%;">
            <tr>
                <td style="width: 137px;">
                    Title <span class="required">*</span>
                </td>
                <td colspan="6" >
                   @Html.HiddenFor(a=>a.Id)
                    @Html.EditorFor(a => a.Title)<br />
                    @Html.ValidationMessageFor(a => a.Title, "", new { @class = "required" })
                </td>
               
            </tr>
            <tr>
                <td>
                    Descriptions <span class="required">*</span>
                </td>
                <td colspan="6" >
                    @*@Html.TextAreaFor(a => a.Textbody, new { @class = "ckeditor" })*@
                    @Html.TextAreaFor(a => a.Textbody, 5, 50, new { })<br />
                    @Html.ValidationMessageFor(a => a.Textbody, "", new { @class = "required" })
                </td>
            </tr>
            <tr>
            <tr>
                <td style="width: 124px;">
                    Redirect Page<span class="required">*</span>
                </td>
                <td style="width: 221px">
                    <select name="redirectpage" onchange="Redirectpage(value);" style="color: black" id="redirectpage">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.RedirectPage, "", new { @class = "required" })
                </td>
                <td style="width: 137px;" id="td_parentcategorylabel">
                    Parent Category <span class="required">*</span>
                </td>
                <td style="width: 221px" colspan="5" id="td_parentcategorytext">
                    <select name="ParentCatid" onchange="SetProdcutCat();" style="color: black" id="ParentCategory">
                        <option>Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.ParentCatid, "", new { @class = "required" })
                </td>
            </tr>
            <tr id="trprdcat">

                <td style="width: 137px;">
                    Product Category <span class="required">*</span>
                </td>
                <td style="width: 221px">

                    <select name="pcId" onchange="SetProdcutlevelOne();" style="color: black" id="ProductCategory">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "required" })
                    <span id="pcIdValidation"></span>
                </td>
                <td style="width: 124px;">
                    Product Level One<span class="required">*</span>
                </td>
                <td style="width: 221px" colspan="5">
                    <select name="ProductLvl1" onchange="SetProdcutlevelTwo();" style="color: black"
                            id="pclvlOne">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.ProductLevelOne, "", new { @class = "required" })
                </td>
            </tr>
            <tr id="trprdlevel">

                <td style="width: 124px;">
                    Product Level Two<span class="required">*</span>
                </td>
                <td style="width: 221px">
                    <select name="ProductLvl2" onchange="GetProductLvl3();" style="color: black" id="pclvlTwo">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.ProductLeveltwo, "", new { @class = "required" })
                </td>
                <td style="width: 124px;">
                    Product Level Three<span class="required">*</span>
                </td>
                <td style="width: 221px" colspan="5">
                    <select name="ProductLvl3" onchange="SetProdcutlevelthree();" style="color: black"
                            id="pclvlthree">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.ProductLevelThreeId, "", new { @class = "required" })
                </td>

            </tr>
            <tr id="trmedia">

                <td style="width: 124px;">
                    Media<span class="required">*</span>
                </td>
                <td style="width: 221px" colspan="6">
                    <select name="Media" style="color: black" id="media">
                        <option value="0">Select</option>
                    </select>
                    <br />
                    @Html.ValidationMessageFor(model => model.Media, "", new { @class = "required" })
                </td>


            </tr>
                @*<td style="width: 137px;">
                    Video URL
                </td>
                <td>
                    @Html.EditorFor(a => a.VideoURL)<br />
                    @Html.ValidationMessageFor(a => a.VideoURL, "", new { @class = "required" })
                </td>*@
            <tr>
                <td>
                    Start Date <span class="required">*</span>
                </td>
                <td >
                    <input id="stdate" type="text" class="date" name="StartDate" /><br />
                    <span id="sdate" class="required"></span>
                </td>
                <td>
                    End Date <span class="required">*</span>
                </td>
                <td colspan="5">
                    <input id="etdate" type="text" class="date" name="EndDate" /><br />
                    <span id="edate" class="required"></span>
                </td>
            </tr>
            <tr>
               
               
                <td>
                    Upload Image <span class="required">*</span>
                </td>
                <td >
                    <input type="file" name="postedFile" />
                    <span id="file" class="required"></span>
                </td>
                <td>Previous Image</td>
                <td colspan="5">
                    <img src="@Url.Content("~/LuminiousUpdateImage/")@Model.ImageName" title="@Model.ImageFileName" style="width:100px; height:100px" />
                </td>
                
            </tr>
            <tr>
               

                <td>
                    Status <span class="required">*</span>
                </td>
                <td colspan="5" >
                    <input id="Status" type="checkbox" name="Status" />
                </td>
                <td>
                    <span class="Status"></span>
                </td>
            </tr>
           
        </table>

    </div>
    <input type="submit" class="SubmitButton" value="Submit" />
    </div>
    </div>
    
  

  
}
