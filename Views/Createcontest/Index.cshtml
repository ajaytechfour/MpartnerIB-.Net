@using PagedList;
@using PagedList.Mvc;
@model  IPagedList<LuminousMpartnerIB.EF.InsertContext>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Error.cshtml";
}

<link href="@Url.Content("~/assets/css/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
<script src="@Url.Content("~/assets/js/jquery-1.10.2.js")" type="text/javascript"></script>
<script src="@Url.Content("~/assets/js/jquery-ui.min.js")" type="text/javascript"></script>



<script type="text/javascript">
    $(function () {

        ValidationMessage();
        show();
        $("#DealerPhone").keyup(function (e) {
            var nameofbeneficiary = jQuery(e.currentTarget).val();
            myString = nameofbeneficiary.replace(/\D/g, '');
            var num = myString.substring(0, 10);
            $('#DealerPhone').val(num);
        });

        
    });

    function ValidationMessage() {
        if ('@ViewBag.StartDate' != "") {
            $("#sdate").text('@ViewBag.StartDate');
        }

        if ('@ViewBag.EndDate' != "") {
            $("#edate").text('@ViewBag.EndDate');
        }

        if ('@ViewBag.File' != "") {
            $("#file").text('@ViewBag.File');
        }
        if ('@ViewBag.SaveStatus' != "") {
            alert('@ViewBag.SaveStatus');
            location.href = "@Url.Content("~/Createcontest/Index")";
        }
        @*$("#stdate").val('@ViewBag.preStartDate');
        $("#etdate").val('@ViewBag.PreEndDate');*@

    }

    //Get All States
    function show() {
        $.post("@Url.Content("~/ProductCategory/GetParentCategory")", null, function (data) { SetParentCategory(data); }, "Json");
        $.get("@Url.Content("~/state/Showstate")", null, function (data) { chk(data, "StateId"); })
        .error(function (data) { chk(data, "StateId"); });
    }
    //Check Permisson and Session
    function chk(abc, Cid) {


        if (abc == "You do not have view permission") {

            alert("You Do Not Have View Permission");
            return false;
        }
        else {
            if (abc == "session expire") {
                location.href = '@Url.Action("login", "login")';
            }
            else if (abc == "Invalid Value") {
                alert("Invalid Value");
            }
            else {
                if (Cid == "StateId") {
                    SetDropDown(abc, Cid);
                }
                else if (Cid == "CityId") {
                    SetCityDropDown(abc, "CityId");
                }
                else if (Cid == "RoleID") {
                    SetRoleDropDown(abc, "RoleID");
                }
            }
        }
    }
    // Fill State DropDown
    function SetDropDown(data, cId) {
        option = "";

        var procat = $("#" + cId);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.statename + "</option>";

        });
        procat.append(option);
    }
    //State

    //Fill City DropDown
    function SetCityDropDown(data, cId) {
        option = "";

        var procat = $("#" + cId);
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.cityname + "</option>";

        });
        procat.append(option);
    }
    //Fill City DropDown
    //City
    function showCity() {
        var statedValue = $("#StateId").val();
        $.get("@Url.Content("~/city/Showcity")", { id: statedValue }, function (data) { chk(data, "CityId"); })
    .error(function (data) { chk(data, "CityId"); });
    }
    //City

    function SetParentCategory(data) {

        option = "";
        var procat = $("#ParentCategory");
        procat.empty();
        procat.append("<option value=0>Select</option>");
        $.each(data, function (key, value) {
            option += "<option value=" + value.id + ">" + value.Name + "</option>";

        });
        procat.append(option);

    }

</script>
<style type="text/css">
    .required {
        color: Red;
    }

    table {
        border: 0;
        border-spacing: 0;
        font-size: 0.857em;
        margin: 10px 0;
        width: 100%;
    }

        table table {
            font-size: 1em;
        }

    #footer-wrapper table {
        font-size: 1em;
    }

    table tr th {
        background: #757575;
        background: rgba(0, 0, 0, 0.51);
        border-bottom-style: none;
    }

        table tr th,
        table tr th a,
        table tr th a:hover {
            color: #FFF;
            font-weight: bold;
        }

    table tbody tr th {
        vertical-align: top;
    }

    tr td,
    tr th {
        padding: 4px 9px;
        border: 1px solid #fff;
        text-align: left; /* LTR */
    }

    #footer-wrapper tr td,
    #footer-wrapper tr th {
        border-color: #555;
        border-color: rgba(255, 255, 255, 0.18);
    }

    tr.odd {
        background: #e4e4e4;
        background: rgba(0, 0, 0, 0.105);
    }

    tr,
    tr.even {
        background: #efefef;
        background: rgba(0, 0, 0, 0.063);
    }

    table ul.links {
        margin: 0;
        padding: 0;
        font-size: 1em;
    }

        table ul.links li {
            padding: 0 1em 0 0;
        }
</style>

<script type="text/javascript">


    $(function () {


        $.post("@Url.Content("~/Createcontest/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");



    });
    function SetGrid(data) {

        if (data == "Login") {
            location.href = "@Url.Content("~/Logout/Logout")";
        }
        else if (data == "snotallowed") {
            location.href = "@Url.Content("~/snotallowed/snotallowed")";
        }
        else {
            var body = "";
            $("#Grid tbody").empty();
            $.each(data.result, function (key, value) {
                var pagename = value.PageName;
                if (pagename == null || pagename == "") {
                    var PName = "";
                }
                else {
                    var PName = value.PageName;
                }
                if (value.CreatedOn != null) {
                    var today = new Date();

                  

                    var cur_date = new Date(value.CreatedOn);
                    var now = new Date(value.CreatedOn);
                    cur_date.setMinutes(now.getMinutes() + 15);
                    console.log(cur_date);



                    //  var parsedata = Date.parse(now);

                    //  console.log(parsedata);

                    //  var addtime =
                    ////  now.setMinutes(value.CreatedOn.addMinutes(15));
                    //  //now.setMinutes(value.CreatedOn+" "+value.CreatedOn + 30);
                    //  alert(addtime);
                }

                body += "<tr><td>" + value.Id + "</td>" +
    "<td>" + value.Parentcategory + "</td>" +
                "<td>" + value.DealerName + "</td>" +
                  "<td>" + value.Dealestate + "</td>" +
                "<td>" + value.DealerCity + "</td>" +
            "<td>" + value.DealerPhone + "</td>" +

               "<td>" + value.DistributorCode + "</td>" +
             "<td>" + value.Empcode + "</td>" +
                 "<td>" + value.status + "</td>" +
                   "<td>" + value.createddate + "</td>" +
            "<td><img src=" + "@Url.Content("~/ProfileImages/")" + value.ImageEncode + " style='height: 52px;width: 53px;' /> </td>"

                if (cur_date > today) {
                    body += "<td><a style='cursor:pointer' onclick=Edit(" + value.Id + ");>Edit</a> <a style='cursor:pointer' onclick=Delete(" + value.Id + ");>Delete</a></td></tr>";
                }
                else {
                    body += "<td></td>";
                }



            });
            $("#Grid tbody").append(body);


            SetPages(data.TotalRecord);

        }

    }

    function Delete(id) {
        if (confirm("Do You Want To Delete This Record")) {

            $.post("@Url.Content("~/Createcontest/Delete")", { id: id }, function (data) {
                $.post("@Url.Content("~/Createcontest/GetContactDetail")", null, function (data) { SetGrid(data); }, "Json");

                alert(data);

            }, "Json");
        }
    }

    function Edit(id) {
        location.href = "@Url.Content("~/Createcontest/Edit/")" + id;
    }
    function SetPages(paging) {
        var pages = "";
        $("#Paging").empty();
        for (var i = 1; i <= parseInt(paging) ; i++) {
            pages += "<a style='cursor:pointer' onclick=GetPagesValues(" + i + ");> " + i + "  </a>";

        }
        $("#Paging").append("<u> Pages:-</u>" + pages);
    }

</script>
<div>

</div>
@using (@Html.BeginForm("Save", "Createcontest", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    <div id="content_wrap">
        <div class="msgbar msg_Info heading">Create Contest</div>
        <div class="content_main">
            <div class="boxes1">



                <table style="width: 100%;">
                    <tr>
                        <td style="width: 137px;">
                            Parent Category <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select name="ParentCatid" style="color: black" id="ParentCategory">
                                <option>Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().ParentCategory, "", new { @class = "required" })
                        </td>

                        <td style="width: 137px;">
                            Dealer Name
                        </td>
                        <td>
                            @if (Session["ASMEmpCode"] != null)
                            {
                                @Html.EditorFor(a => a.FirstOrDefault().DealerName)<br />
                            }
                            else
                            {
                                @Html.TextBox("DealerName", (string)ViewBag.Username, new { @readonly = "readonly" })<br />
                            }

                        </td>

                    </tr>
                    <tr>
                        <td style="width: 137px;">
                            Dealer Id
                        </td>
                        <td>
                            @Html.TextBox("DealerId", (string)ViewBag.Userid, new { @readonly = "readonly" })<br />

                        </td>
                        @if (Session["ASMEmpCode"] != null)
                        {
                            <td style="width: 137px;">
                                Dealer Firm Name<span style="color: red;">*</span>
                            </td>
                            <td>
                                @Html.EditorFor(a => a.FirstOrDefault().DealerFirmName)<br />
                                @Html.ValidationMessageFor(a => a.FirstOrDefault().DealerFirmName, "", new { @class = "required" })

                            </td>
                        }
                        else
                        {

                        }


                    </tr>
                    <tr>
                        <td>
                            State <span style="color: red;">*</span>
                        </td>
                        <td>
                            <select id="StateId" name="stateName" onchange="showCity()">
                                <option value="0">Select</option>
                            </select>
                            <br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().DealerState, "", new { @class = "required" })
                        </td>
                        <td>
                            City
                        </td>
                        <td>
                            <select id="CityId" name="DealerCity">
                                <option value="0">Select</option>
                            </select>
                            @*<br />
                                @Html.ValidationMessageFor(a => a.FirstOrDefault().DealerCity, "", new { @class = "required" })*@
                        </td>


                    </tr>
                    <tr>
                        <td>
                            Dealer Phone <span style="color: red;">*</span>
                        </td>
                        <td>
                            @if (Session["mobileno"] != null)
                            {
                                @Html.TextBox("DealerPhone", (string)ViewBag.Mobileno, new { @readonly = "readonly" })<br />
                            }
                            else
                            {
                                @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                                @Html.EditorFor(a => a.FirstOrDefault().DealerPhone)<br />
                                @Html.ValidationMessageFor(a => a.FirstOrDefault().DealerPhone, "", new { @class = "required" })
                            }
                        </td>
                        <td>
                            Dealer Email
                        </td>
                        <td>
                            @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                            @Html.EditorFor(a => a.FirstOrDefault().DealerEmail)<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().DealerEmail, "", new { @class = "required" })
                        </td>


                    </tr>
                    <tr>
                        <td>
                            Distributor Code
                        </td>
                        <td>
                            @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                            @Html.EditorFor(a => a.FirstOrDefault().DistributorCode)<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().DistributorCode, "", new { @class = "required" })
                        </td>
                        <td>
                            Emp/FSE Code <span style="color: red;">*</span>
                        </td>
                        <td>
                            @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                            @Html.EditorFor(a => a.FirstOrDefault().EmpCode)<br />
                            @Html.ValidationMessageFor(a => a.FirstOrDefault().EmpCode, "", new { @class = "required" })
                        </td>


                    </tr>

                    <tr>
                        <td>
                            Emp/FSE Name<span style="color: red;">*</span>
                        </td>
                        <td>
                            @*@Html.EditorFor(a=>a.FirstOrDefault().Banner_Details)*@
                            @Html.EditorFor(a => a.FirstOrDefault().FseName)<br />
                            @*@Html.ValidationMessageFor(a => a.FirstOrDefault().EmpCode, "", new { @class = "required" })*@
                        </td>
                        <td>
                            Upload Image <span style="color: red;">*</span>
                        </td>
                        <td>
                            <input type="file" name="postedFile" />
                            <br />
                            <span id="file" class="required"></span>
                        </td>


                    </tr>
                    <tr>
                        <td>
                            Status
                        </td>
                        <td colspan="3">
                            <input id="status" type="checkbox" checked="checked" name="Status" />
                            <br />
                            <span class="Status"></span>
                        </td>
                    </tr>
                    @if (Session["Count2"]!= null)
                    {
                        <tr>
                            <td colspan="4" align="center">

                                <input type="submit"   class="save-but-m" disabled="disabled" style="color:grey"  value="Submit" />
                            </td>

                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" align="center">

                                <input type="submit" class="save-but-m" value="Submit" />
                            </td>

                        </tr>
                    }
                </table>

            </div>
        </div>
    </div>



}

<div id="list" style="width: 997px; float: right; margin-right: 15px;">
    <div style="overflow-y:scroll;max-height:880px">
        <table id="Grid" class="droppable">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Dealer Name
                    </th>
                    <th>
                        State
                    </th>
                    <th>
                        City
                    </th>
                    <th>
                        Phone
                    </th>

                    <th>
                        Dis Code
                    </th>
                    <th>
                        Emp Code
                    </th>
                    <th>
                        Status
                    </th>
                    <th>
                        CreatedOn
                    </th>
                    <th>
                        Image
                    </th>
                    <th>
                        Action
                    </th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <div id="Paging">
        </div>
    </div>
</div>